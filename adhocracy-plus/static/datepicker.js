/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkadhocracy_plus"] = self["webpackChunkadhocracy_plus"] || []).push([["datepicker"],{

/***/ "./adhocracy-plus/assets/js/init-picker.js":
/*!*************************************************!*\
  !*** ./adhocracy-plus/assets/js/init-picker.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\n\nvar $ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.min.js\");\nvar datePickerController = __webpack_require__(/*! datepicker */ \"./node_modules/datepicker/js/datepicker.js\");\nvar django = __webpack_require__(/*! django */ \"django\");\n$(function () {\n  var $inputs = $('.datepicker');\n  $inputs.addClass('form-control');\n  $inputs.each(function (i, e) {\n    var initObject = {\n      formElements: {}\n    };\n    initObject.formElements[e.id] = django.get_format('DATE_INPUT_FORMATS')[0];\n    datePickerController.createDatePicker(initObject);\n  });\n});\n\n//# sourceURL=webpack://adhocracy-plus/./adhocracy-plus/assets/js/init-picker.js?");

/***/ }),

/***/ "./node_modules/datepicker/js/datepicker.js":
/*!**************************************************!*\
  !*** ./node_modules/datepicker/js/datepicker.js ***!
  \**************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*! DatePicker v6.3.6 MIT/GPL2 @freqdec */\r\n(function (root, factory) {\r\n    if (true) {\r\n        // AMD\r\n        !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n    } else {}\r\n}(this, function() {\r\n\r\n    \"use strict\";\r\n\r\n    var debug               = false,\r\n        isOpera             = Object.prototype.toString.call(window.opera) === \"[object Opera]\",\r\n        describedBy         = \"\",\r\n        languageInfo        = parseUILanguage(),\r\n        nbsp                = String.fromCharCode(160),\r\n        datePickers         = {},\r\n        weeksInYearCache    = {},\r\n        bespokeTitles       = {},\r\n        uniqueId            = 0,\r\n        finalOpacity        = 100,\r\n        cssAnimations       = null,\r\n        transitionEnd       = \"\",\r\n        buttonTabIndex      = true,\r\n        mouseWheel          = true,\r\n        deriveLocale        = true,\r\n        localeImport        = false,\r\n        nodrag              = false,\r\n        langFileFolder      = false,\r\n        returnLocaleDate    = false,\r\n        kbEvent             = false,\r\n        dateParseFallback   = true,\r\n        cellFormat          = \"%d %F %Y\",\r\n        titleFormat         = \"%F %d, %Y\",\r\n        statusFormat        = \"\",\r\n        formatParts         = isOpera ? [\"%j\"] : [\"%j\", \" %F %Y\"],\r\n        dPartsRegExp        = /%([d|j])/,\r\n        mPartsRegExp        = /%([M|F|m|n])/,\r\n        yPartsRegExp        = /%[y|Y]/,\r\n        noSelectionRegExp   = /date-picker-unused|out-of-range|day-disabled|not-selectable/,\r\n        formatTestRegExp    = /%([d|j|M|F|m|n|Y|y])/,\r\n        formatSplitRegExp   = /%([d|D|l|j|N|w|S|W|M|F|m|n|t|Y|y])/,\r\n        rangeRegExp         = /^((\\d\\d\\d\\d)(0[1-9]|1[012])(0[1-9]|[12][0-9]|3[01]))$/,\r\n        wcDateRegExp        = /^(((\\d\\d\\d\\d)|(\\*\\*\\*\\*))((0[1-9]|1[012])|(\\*\\*))(0[1-9]|[12][0-9]|3[01]))$/,\r\n        wsCharClass         = \"\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u00A0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\",\r\n        // https://gist.github.com/padolsey/527683\r\n        oldIE               = (function(){var undef,v = 3,div = document.createElement('div'),all = div.getElementsByTagName('i');while (div.innerHTML = '<!--[if gt IE ' + (++v) + ']><i></i><![endif]-->',all[0]); return v > 4 ? v : undef;}());\r\n\r\n    (function() {\r\n        var scriptFiles = document.getElementsByTagName('script'),\r\n            json        = parseJSON(String(scriptFiles[scriptFiles.length - 1].innerHTML).replace(/[\\n\\r\\s\\t]+/g, \" \").replace(/^\\s+/, \"\").replace(/\\s+$/, \"\"));\r\n\r\n        if(typeof json === \"object\" && !(\"err\" in json)) {\r\n            affectJSON(json);\r\n        };\r\n\r\n        if(deriveLocale && typeof(fdLocale) != \"object\") {\r\n            var head   = document.getElementsByTagName(\"head\")[0] || document.documentElement,\r\n                loc    = langFileFolder ? langFileFolder : scriptFiles[scriptFiles.length - 1].src.substr(0, scriptFiles[scriptFiles.length - 1].src.lastIndexOf(\"/\")) + \"/lang/\",\r\n                script,\r\n                i;\r\n\r\n            for(i = 0; i < languageInfo.length; i++) {\r\n                script          = document.createElement('script');\r\n                script.type     = \"text/javascript\";\r\n                script.src      = loc + languageInfo[i] + \".js\";\r\n                script.charSet  = \"utf-8\";\r\n\r\n                if(oldIE && oldIE < 8) {\r\n                    var bases = document.getElementsByTagName('base');\r\n                    if (bases.length && bases[0].childNodes.length) {\r\n                            bases[0].appendChild(script);\r\n                    } else {\r\n                            head.appendChild(script);\r\n                    };\r\n                    bases = null;\r\n                } else {\r\n                    head.appendChild(script);\r\n                };\r\n            };\r\n\r\n            script = null;\r\n        } else {\r\n            returnLocaleDate = true;\r\n        };\r\n    })();\r\n\r\n    function removeChildNodes(elem) {\r\n        while(elem.firstChild) {\r\n            elem.removeChild(elem.firstChild);\r\n        };\r\n    };\r\n\r\n    function addClass(e, c) {\r\n        if(new RegExp(\"(^|[\" + wsCharClass + \"])\" + c + \"([\" + wsCharClass + \"]|$)\").test(e.className)) {\r\n            return;\r\n        };\r\n        e.className += ( e.className ? \" \" : \"\" ) + c;\r\n    };\r\n\r\n    function removeClass(e, c) {\r\n        e.className = !c ? \"\" : e.className.replace(new RegExp(\"(^|[\" + wsCharClass + \"])\" + c + \"([\" + wsCharClass + \"]|$)\"), \" \").replace(new RegExp(\"/^[\" + wsCharClass + \"][\" + wsCharClass + \"]*/\"), '').replace(new RegExp(\"/[\" + wsCharClass + \"][\" + wsCharClass + \"]*$/\"), '');\r\n    };\r\n\r\n    // Attempts to parse the current language from the HTML element. Defaults to \"en\" if none given\r\n    function parseUILanguage() {\r\n        var languageTag = document.getElementsByTagName('html')[0].getAttribute('lang') || document.getElementsByTagName('html')[0].getAttribute('xml:lang');\r\n        languageTag = !languageTag ? \"en\" : languageTag.toLowerCase();\r\n        return languageTag.search(/^([a-z]{2,3})-([a-z]{2})$/) != -1 ? [languageTag.match(/^([a-z]{2,3})-([a-z]{2})$/)[1], languageTag] : [languageTag];\r\n    };\r\n\r\n    // Cross browser split from http://blog.stevenlevithan.com/archives/cross-browser-split\r\n    var cbSplit = function(str, separator, limit) {\r\n        // if `separator` is not a regex, use the native `split`\r\n        if(Object.prototype.toString.call(separator) !== \"[object RegExp]\") {\r\n                return cbSplit._nativeSplit.call(str, separator, limit);\r\n        };\r\n\r\n        var output        = [],\r\n            lastLastIndex = 0,\r\n            flags         = \"\",\r\n            separator     = RegExp(separator.source, \"g\"),\r\n            separator2, match, lastIndex, lastLength;\r\n\r\n        str = str + \"\";\r\n\r\n        if(!cbSplit._compliantExecNpcg) {\r\n            separator2 = RegExp(\"^\" + separator.source + \"$(?!\\\\s)\", flags);\r\n        };\r\n\r\n        /* behavior for `limit`: if it's...\r\n        - `undefined`: no limit.\r\n        - `NaN` or zero: return an empty array.\r\n        - a positive number: use `Math.floor(limit)`.\r\n        - a negative number: no limit.\r\n        - other: type-convert, then use the above rules. */\r\n        if(limit === undefined || +limit < 0) {\r\n            limit = Infinity;\r\n        } else {\r\n            limit = Math.floor(+limit);\r\n            if(!limit) {\r\n                return [];\r\n            };\r\n        };\r\n\r\n        while(match = separator.exec(str)) {\r\n            lastIndex = match.index + match[0].length; // `separator.lastIndex` is not reliable cross-browser\r\n\r\n            if (lastIndex > lastLastIndex) {\r\n                output.push(str.slice(lastLastIndex, match.index));\r\n\r\n                // fix browsers whose `exec` methods don't consistently return `undefined` for nonparticipating capturing groups\r\n                if(!cbSplit._compliantExecNpcg && match.length > 1) {\r\n                    match[0].replace(separator2, function () {\r\n                        for (var i = 1; i < arguments.length - 2; i++) {\r\n                            if(arguments[i] === undefined) {\r\n                                match[i] = undefined;\r\n                            };\r\n                        };\r\n                    });\r\n                };\r\n\r\n                if(match.length > 1 && match.index < str.length) {\r\n                    Array.prototype.push.apply(output, match.slice(1));\r\n                };\r\n\r\n                lastLength = match[0].length;\r\n                lastLastIndex = lastIndex;\r\n\r\n                if(output.length >= limit) {\r\n                    break;\r\n                };\r\n            };\r\n\r\n            if(separator.lastIndex === match.index) {\r\n                // avoid an infinite loop\r\n                separator.lastIndex++;\r\n            };\r\n        };\r\n\r\n        if(lastLastIndex === str.length) {\r\n            if (lastLength || !separator.test(\"\")) {\r\n                output.push(\"\");\r\n            };\r\n        } else {\r\n            output.push(str.slice(lastLastIndex));\r\n        };\r\n\r\n        return output.length > limit ? output.slice(0, limit) : output;\r\n    };\r\n    // NPCG: nonparticipating capturing group\r\n    cbSplit._compliantExecNpcg = /()??/.exec(\"\")[1] === undefined;\r\n    cbSplit._nativeSplit = String.prototype.split;\r\n\r\n    // Affects the JSON passed to the script\r\n    function affectJSON(json) {\r\n        if(!(typeof json === \"object\")) {\r\n            return;\r\n        };\r\n\r\n        var key,\r\n            switchObj = {\r\n                \"debug\":function(value) {\r\n                    debug = !!value;\r\n                    return true;\r\n                },\r\n                \"lang\":function(value) {\r\n                    if(typeof value === \"string\" && value.search(/^[a-z]{2,3}(-([a-z]{2}))?$/i) != -1) {\r\n                        languageInfo = [value.toLowerCase()];\r\n                        returnLocaleDate = true;\r\n                        deriveLocale = true;\r\n                    };\r\n                    return true;\r\n                },\r\n                \"nodrag\":function(value) {\r\n                    nodrag = !!value;\r\n                    return true;\r\n                },\r\n                \"buttontabindex\":function(value) {\r\n                    buttonTabIndex = !!value;\r\n                    return true;\r\n                },\r\n                \"derivelocale\":function(value) {\r\n                    deriveLocale = !!value;\r\n                    return true;\r\n                },\r\n                \"mousewheel\":function(value) {\r\n                    mouseWheel = !!value;\r\n                    return true;\r\n                },\r\n                \"cellformat\":function(value) {\r\n                    if(typeof value === \"string\") {\r\n                        parseCellFormat(value);\r\n                    };\r\n                    return true;\r\n                },\r\n                \"titleformat\":function(value) {\r\n                    if(typeof value === \"string\") {\r\n                        titleFormat = value;\r\n                    };\r\n                    return true;\r\n                },\r\n                \"statusformat\":function(value) {\r\n                    if(typeof value === \"string\") {\r\n                        statusFormat = value;\r\n                    };\r\n                    return true;\r\n                },\r\n                \"describedby\":function(value) {\r\n                    if(typeof value === \"string\") {\r\n                        describedBy = value;\r\n                    };\r\n                    return true;\r\n                },\r\n                \"finalopacity\":function(value) {\r\n                    if(typeof value === 'number' && (+value > 20 && +value <= 100)) {\r\n                        finalOpacity = parseInt(value, 10);\r\n                    };\r\n                    return true;\r\n                },\r\n                \"bespoketitles\":function(value) {\r\n                    if(typeof value === \"object\") {\r\n                        bespokeTitles = {};\r\n                        for(var dt in value) {\r\n                            if(value.hasOwnProperty(dt) && String(dt).match(wcDateRegExp) != -1) {\r\n                                bespokeTitles[dt] = String(value[dt]);\r\n                            };\r\n                        };\r\n                    };\r\n                    return true;\r\n                },\r\n                \"dateparsefallback\":function(value) {\r\n                    dateParseFallback = !!value;\r\n                    return true;\r\n                },\r\n                \"languagefilelocation\":function(value) {\r\n                    langFileFolder = value;\r\n                    return true;\r\n                },\r\n                \"_default\":function() {\r\n                    if(debug) {\r\n                        throw \"Unknown key located within JSON data: \" + key;\r\n                    };\r\n                    return true;\r\n                }\r\n            };\r\n\r\n        for(key in json) {\r\n            if(!json.hasOwnProperty(key)) {\r\n                continue;\r\n            };\r\n            (switchObj.hasOwnProperty(String(key).toLowerCase()) && switchObj[String(key).toLowerCase()] || switchObj._default)(json[key]);\r\n        };\r\n    };\r\n\r\n    // Parses the JSON passed either between the script tags or by using the\r\n    // setGlobalOptions method\r\n    function parseJSON(str) {\r\n        if(!(typeof str === 'string') || str == \"\") {\r\n            return {};\r\n        };\r\n        try {\r\n            // Does a JSON (native or not) Object exist\r\n            if(typeof JSON === \"object\" && JSON.parse) {\r\n                return window.JSON.parse(str);\r\n            // Genious code taken from: http://kentbrewster.com/badges/\r\n            } else if(/debug|lang|nodrag|buttontabindex|derivelocale|mousewheel|cellformat|titleformat|statusformat|describedby|finalopacity|bespoketitles|dateparsefallback/.test(str.toLowerCase())) {\r\n                var f = Function(['var document,top,self,window,parent,Number,Date,Object,Function,',\r\n                    'Array,String,Math,RegExp,Image,ActiveXObject;',\r\n                    'return (' , str.replace(/<\\!--.+-->/gim,'').replace(/\\bfunction\\b/g,'function-') , ');'].join(''));\r\n                return f();\r\n            };\r\n        } catch (e) { };\r\n\r\n        if(debug) {\r\n            throw \"Could not parse the JSON object\";\r\n        };\r\n\r\n        return {\"err\":1};\r\n    };\r\n\r\n    // Parses the cell format to use whenever the datepicker has keyboard focus\r\n    function parseCellFormat(value) {\r\n        if(isOpera) {\r\n            // Don't use hidden text for opera due to the default\r\n            // \"blue\" browser focus outline stretching outside of the viewport\r\n            // and degrading visual accessibility. Harsh & hackish though...\r\n            formatParts = [\"%j\"];\r\n            cellFormat  = \"%j %F %Y\";\r\n            return;\r\n        };\r\n\r\n        // If no day part stipulated then use presets\r\n        if(value.match(/%([d|j])/) == -1) {\r\n            return;\r\n        };\r\n\r\n        // Basic split on the %j or %d modifiers\r\n        formatParts = cbSplit(value, /%([d|j])/);\r\n        cellFormat  = value;\r\n    };\r\n\r\n    function pad(value, length) {\r\n        length = Math.min(4, length || 2);\r\n        return \"0000\".substr(0,length - Math.min(String(value).length, length)) + value;\r\n    };\r\n\r\n    // Very, very basic event functions\r\n    function addEvent(obj, type, fn) {\r\n        if(obj.addEventListener) {\r\n            obj.addEventListener(type, fn, true);\r\n        } else if(obj.attachEvent) {\r\n            obj.attachEvent(\"on\"+type, fn);\r\n        };\r\n    };\r\n    function removeEvent(obj, type, fn) {\r\n        try {\r\n            if(obj.removeEventListener) {\r\n                obj.removeEventListener(type, fn, true);\r\n            } else if(obj.detachEvent) {\r\n                obj.detachEvent(\"on\"+type, fn);\r\n            };\r\n        } catch(err) {};\r\n    };\r\n    function stopEvent(e) {\r\n        e = e || document.parentWindow.event;\r\n        if(e.stopPropagation) {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n        };\r\n\r\n        if(oldIE) {\r\n            e.cancelBubble = true;\r\n            e.returnValue = false;\r\n        };\r\n        \r\n        return false;\r\n    };\r\n\r\n    function setARIARole(element, role) {\r\n        if(element && element.tagName) {\r\n            element.setAttribute(\"role\", role);\r\n        };\r\n    };\r\n\r\n    function setARIAProperty(element, property, value) {\r\n        if(element && element.tagName) {\r\n            element.setAttribute(\"aria-\" + property, value);\r\n        };\r\n    };\r\n\r\n    // Sets a tabindex attribute on an element, bends over for IE.\r\n    function setTabIndex(e, i) {\r\n        e.setAttribute(oldIE ? \"tabIndex\" : \"tabindex\", i);\r\n        e.tabIndex = i;\r\n    };\r\n\r\n    function dateToYYYYMMDD(dt) {\r\n        return dt instanceof Date && !isNaN(dt) ? dt.getFullYear() + pad(dt.getMonth() + 1) + \"\" + pad(dt.getDate()) : dt;\r\n    };\r\n\r\n    // The datePicker object itself\r\n    function datePicker(options) {\r\n        this.dateSet             = null;\r\n        this.timerSet            = false;\r\n        this.visible             = false;\r\n        this.fadeTimer           = null;\r\n        this.timer               = null;\r\n        this.yearInc             = 0;\r\n        this.monthInc            = 0;\r\n        this.dayInc              = 0;\r\n        this.mx                  = 0;\r\n        this.my                  = 0;\r\n        this.x                   = 0;\r\n        this.y                   = 0;\r\n        this.created             = false;\r\n        this.disabled            = false;\r\n        this.opacity             = 0;\r\n        this.opacityTo           = 100;\r\n        this.finalOpacity        = 100;\r\n        this.inUpdate            = false;\r\n        this.kbEventsAdded       = false;\r\n        this.fullCreate          = false;\r\n        this.selectedTD          = null;\r\n        this.cursorTD            = null;\r\n        this.cursorDate          = options.cursorDate ? options.cursorDate : \"\",\r\n        this.date                = options.cursorDate ? new Date(+options.cursorDate.substr(0,4), +options.cursorDate.substr(4,2) - 1, +options.cursorDate.substr(6,2),5,0,0) : new Date();\r\n        this.defaults            = {};\r\n        this.dynDisabledDates    = {};\r\n        this.dateList            = [];\r\n        this.bespokeClass        = options.bespokeClass;\r\n        this.firstDayOfWeek      = localeImport.firstDayOfWeek;\r\n        this.interval            = new Date();\r\n        this.clickActivated      = false;\r\n        this.showCursor          = false;\r\n        this.noFocus             = true;\r\n        this.kbEvent             = false;\r\n        this.delayedUpdate       = false;\r\n        this.bespokeTitles       = {};\r\n        this.bespokeTabIndex     = options.bespokeTabIndex;\r\n\r\n        for(var thing in options) {\r\n            if(!options.hasOwnProperty(thing) || String(thing).search(/^(callbacks|formElements|enabledDates|disabledDates)$/) != -1) {\r\n                continue;\r\n            };\r\n            this[thing] = options[thing];\r\n        };\r\n\r\n        if(oldIE) {\r\n            this.iePopUp = null;\r\n        };\r\n        \r\n        for(var i = 0, prop; prop = [\"callbacks\", \"formElements\"][i]; i++) {\r\n            this[prop] = {};\r\n            if(prop in options) {\r\n                for(thing in options[prop]) {\r\n                    if(options[prop].hasOwnProperty(thing)) {\r\n                            this[prop][thing] = options[prop][thing];\r\n                    };\r\n                };\r\n            };\r\n        };\r\n\r\n        // Adjust time to stop daylight savings madness on windows\r\n        this.date.setHours(5);\r\n\r\n        // Called from an associated form elements onchange event\r\n        this.changeHandler = function() {\r\n            // In a perfect world this shouldn't ever happen\r\n            if(o.disabled) {\r\n                return;\r\n            };\r\n            o.setDateFromInput();\r\n            o.callback(\"dateset\", o.createCbArgObj());\r\n        };\r\n\r\n        // Creates the object passed to the callback functions\r\n        this.createCbArgObj = function() {\r\n            return this.dateSet ? {\r\n                \"id\"    :this.id,\r\n                \"date\"  :this.dateSet,\r\n                \"dd\"    :pad(this.date.getDate()),\r\n                \"mm\"    :pad(this.date.getMonth() + 1),\r\n                \"yyyy\"  :this.date.getFullYear()\r\n                } : {\r\n                \"id\"    :this.id,\r\n                \"date\"  :null,\r\n                \"dd\"    :null,\r\n                \"mm\"    :null,\r\n                \"yyyy\"  :null\r\n                };\r\n        };\r\n\r\n        // Attempts to grab the window scroll offsets\r\n        this.getScrollOffsets = function() {\r\n            if(typeof(window.pageYOffset) == 'number') {\r\n                //Netscape compliant\r\n                return [window.pageXOffset, window.pageYOffset];\r\n            } else if(document.body && (document.body.scrollLeft || document.body.scrollTop)) {\r\n                //DOM compliant\r\n                return [document.body.scrollLeft, document.body.scrollTop];\r\n            } else if(document.documentElement && (document.documentElement.scrollLeft || document.documentElement.scrollTop)) {\r\n                //IE6 standards compliant mode\r\n                return [document.documentElement.scrollLeft, document.documentElement.scrollTop];\r\n            };\r\n            return [0,0];\r\n        };\r\n\r\n        // Calculates the current list of disabled & enabled dates for a specific year/month\r\n        this.getDateExceptions = function(y, m) {\r\n\r\n            m = pad(m);\r\n\r\n            var obj     = {},\r\n                lower   = o.firstDateShown,\r\n                upper   = o.lastDateShown,\r\n                rLength = o.dateList.length,\r\n                rNumber, workingDt, workingY, workingM, dtLower, dtUpper, i, dt, dt1, dt2, rngLower, rngUpper, cDate;\r\n\r\n            if(!upper || !lower) {\r\n                lower = o.firstDateShown = y + pad(m) + \"01\";\r\n                upper = o.lastDateShown  = y + pad(m) + pad(daysInMonth(m, y));\r\n            };\r\n\r\n            dtLower = Number(lower.substr(0,6));\r\n            dtUpper = Number(upper.substr(0,6));\r\n\r\n            workingDt = String(dtLower);\r\n\r\n            while(+workingDt <= dtUpper) {\r\n                workingY = workingDt.substr(0,4);\r\n                workingM = workingDt.substr(4,2);\r\n\r\n                for(rNumber = 0; rNumber < rLength; rNumber++) {\r\n                    dt1 = String(o.dateList[rNumber].rLow).replace(/^(\\*\\*\\*\\*)/, workingY).replace(/^(\\d\\d\\d\\d)(\\*\\*)/, \"$1\"+workingM);\r\n                    dt2 = String(o.dateList[rNumber].rHigh).replace(/^(\\*\\*\\*\\*)/, workingY).replace(/^(\\d\\d\\d\\d)(\\*\\*)/, \"$1\"+workingM);\r\n\r\n                    // Single date\r\n                    if(dt2 == 1) {\r\n                        if(+dt1 >= +o.firstDateShown && +dt1 <= +o.lastDateShown) {\r\n                            obj[dt1] = o.dateList[rNumber].type;\r\n                        };\r\n                        continue;\r\n                    };\r\n\r\n                    // Date Range\r\n                    if(dt1 <= dt2\r\n                       &&\r\n                       workingDt >= dt1.substr(0,6)\r\n                       &&\r\n                       workingDt <= dt2.substr(0,6)\r\n                       ) {\r\n                        rngLower = Math.max(dt1, Math.max(String(workingDt) + \"01\", this.firstDateShown));\r\n                        rngUpper = Math.min(dt2, Math.min(String(workingDt) + \"31\", this.lastDateShown));\r\n                        for(i = rngLower; i <= rngUpper; i++) {\r\n                            obj[i] = o.dateList[rNumber].type;\r\n                        };\r\n                    };\r\n                };\r\n\r\n                // Let the Date Object take care of month overflowss\r\n                workingDt = new Date(workingY, +workingM, 2);\r\n                workingDt = workingDt.getFullYear()+\"\"+pad(workingDt.getMonth()+1);\r\n            };\r\n\r\n            return obj;\r\n        };\r\n\r\n        // Repositions the datepicker beside the button - to the bottom by\r\n        // preference but to the top if there is not enough room to display the\r\n        // entire U.I. at the bottom (it really should be updated to favour\r\n        // bottom positioning if not enough room to display the entire U.I. at\r\n        // the top in that scenario though)\r\n        this.reposition = function() {\r\n            if(!o.created || o.staticPos) {\r\n                return;\r\n            };\r\n\r\n            o.div.style.visibility = \"hidden\";\r\n            o.div.style.left = o.div.style.top = \"0px\";\r\n            o.div.style.display = \"block\";\r\n\r\n            var osh         = o.div.offsetHeight,\r\n                osw         = o.div.offsetWidth,\r\n                elem        = document.getElementById('fd-but-' + o.id),\r\n                pos         = o.truePosition(elem),\r\n                trueBody    = (document.compatMode && document.compatMode!=\"BackCompat\") ? document.documentElement : document.body,\r\n                sOffsets    = o.getScrollOffsets(),\r\n                scrollTop   = sOffsets[1],\r\n                scrollLeft  = sOffsets[0],\r\n                tSpace      = parseInt(pos[1] - 2) - parseInt(scrollTop),\r\n                bSpace      = parseInt(trueBody.clientHeight + scrollTop) - parseInt(pos[1] + elem.offsetHeight + 2);\r\n\r\n            o.div.style.visibility = \"visible\";\r\n\r\n            o.div.style.left = Number(parseInt(trueBody.clientWidth+scrollLeft) < parseInt(osw+pos[0]) ? Math.abs(parseInt((trueBody.clientWidth+scrollLeft) - osw)) : pos[0]) + \"px\";\r\n            o.div.style.top  = (bSpace > tSpace) ? Math.abs(parseInt(pos[1] + elem.offsetHeight + 2)) + \"px\" : Math.abs(parseInt(pos[1] - (osh + 2))) + \"px\";\r\n            if(oldIE === 6) {\r\n                o.iePopUp.style.top    = o.div.style.top;\r\n                o.iePopUp.style.left   = o.div.style.left;\r\n                o.iePopUp.style.width  = osw + \"px\";\r\n                o.iePopUp.style.height = (osh - 2) + \"px\";\r\n            };\r\n        };\r\n\r\n        this.removeCursorHighlight = function() {\r\n            var td = document.getElementById(o.id + \"-date-picker-hover\");\r\n            if(td) {\r\n                removeClass(td, \"date-picker-hover\");\r\n            };\r\n        };\r\n\r\n        this.addCursorHighlight = function() {\r\n            var td = document.getElementById(o.id + \"-date-picker-hover\");\r\n            if(td) {\r\n                addClass(td, \"date-picker-hover\");\r\n            };\r\n        };\r\n        // Resets the tabindex of the previously focused cell\r\n        this.removeOldFocus = function() {\r\n            var td = document.getElementById(o.id + \"-date-picker-hover\");\r\n            if(td) {\r\n                try {\r\n                    setTabIndex(td, -1);\r\n                    removeClass(td, \"date-picker-hover\");\r\n                    td.id = \"\";\r\n                    td.onblur  = null;\r\n                    td.onfocus = null;\r\n                } catch(err) {};\r\n            };\r\n        };\r\n\r\n        // Sets the tabindex & focus on the currently highlighted cell\r\n        this.setNewFocus = function() {\r\n            var td = document.getElementById(o.id + \"-date-picker-hover\");\r\n            if(td) {\r\n                try {\r\n                    setTabIndex(td, 0);\r\n                    if(this.showCursor) {\r\n                        addClass(td, \"date-picker-hover\");\r\n                    };\r\n                    // If opened with the keyboard then add focus & blur events to the cell\r\n                    if(!this.clickActivated) {\r\n                        td.onblur    = o.onblur;\r\n                        td.onfocus   = o.onfocus;\r\n                    };\r\n\r\n                    // If opened with the keyboard (and not in opera) then add a screen-reader friendly date format\r\n                    if(!isOpera && !this.clickActivated) {\r\n                        o.addAccessibleDate();\r\n                    };\r\n\r\n                    // Try to programmatically set focus on the cell\r\n                    if(!this.noFocus && !this.clickActivated) {\r\n                        setTimeout(function() { try { td.focus(); } catch(err) {}; }, 0);\r\n                    };\r\n                } catch(err) { };\r\n            };\r\n        };\r\n\r\n        // Adds a screen-reader friendly date to the current cell whenever\r\n        // the datepicker has been opened with the keyboard\r\n        this.addAccessibleDate = function() {\r\n            var td   = document.getElementById(o.id + \"-date-picker-hover\");\r\n\r\n            if(td && !(td.getElementsByTagName(\"span\").length)) {\r\n                var ymd = td.className.match(/cd-([\\d]{4})([\\d]{2})([\\d]{2})/),\r\n                    noS = td.className.search(noSelectionRegExp) != -1,\r\n                    spn = document.createElement('span'),\r\n                    spnC;\r\n\r\n                spn.className       = \"fd-screen-reader\";\r\n\r\n                removeChildNodes(td);\r\n\r\n                if(noS) {\r\n                    spnC = spn.cloneNode(false);\r\n                    spnC.appendChild(document.createTextNode(getTitleTranslation(13)));\r\n                    td.appendChild(spnC);\r\n                };\r\n\r\n                for(var pt = 0, part; part = formatParts[pt]; pt++) {\r\n                    if(part == \"%j\" || part == \"%d\") {\r\n                        td.appendChild(document.createTextNode(printFormattedDate(new Date(ymd[1], +ymd[2]-1, ymd[3], 5, 0, 0), part, true)));\r\n                    } else {\r\n                        spnC = spn.cloneNode(false);\r\n                        spnC.appendChild(document.createTextNode(printFormattedDate(new Date(ymd[1], +ymd[2]-1, ymd[3], 5, 0, 0), part, true)));\r\n                        td.appendChild(spnC);\r\n                    };\r\n                };\r\n            };\r\n        };\r\n\r\n        // Sets the current cursor to a specific date\r\n        this.setCursorDate = function(yyyymmdd) {\r\n            if(String(yyyymmdd).search(/^([0-9]{8})$/) != -1) {\r\n                this.date = new Date(+yyyymmdd.substr(0,4), +yyyymmdd.substr(4,2) - 1, +yyyymmdd.substr(6,2), 5, 0, 0);\r\n                this.cursorDate = yyyymmdd;\r\n\r\n                if(this.staticPos) {\r\n                    this.updateTable();\r\n                };\r\n            };\r\n        };\r\n\r\n        // Updates the table used to display the datepicker\r\n        this.updateTable = function(noCallback) {\r\n            if(!o || o.inUpdate || !o.created) {\r\n                return;\r\n            };\r\n\r\n            // We are currently updating (used to stop public methods from firing)\r\n            o.inUpdate = true;\r\n\r\n            // Remove the focus from the currently highlighted cell\r\n            o.removeOldFocus();\r\n\r\n            o.div.dir = localeImport.rtl ? \"rtl\" : \"ltr\";\r\n\r\n            // If the update timer initiated\r\n            if(o.timerSet && !o.delayedUpdate) {\r\n                // Are we incrementing/decrementing the month\r\n                if(o.monthInc) {\r\n                    var n = o.date.getDate(),\r\n                        d = new Date(o.date);\r\n\r\n                    d.setDate(2);\r\n                    d.setMonth(d.getMonth() + o.monthInc * 1);\r\n                    // Don't go over the days in the month\r\n                    d.setDate(Math.min(n, daysInMonth(d.getMonth(),d.getFullYear())));\r\n\r\n                    o.date = new Date(d);\r\n                } else {\r\n                    o.date.setDate(Math.min(o.date.getDate()+o.dayInc, daysInMonth(o.date.getMonth()+o.monthInc,o.date.getFullYear()+o.yearInc)));\r\n                    o.date.setMonth(o.date.getMonth() + o.monthInc);\r\n                    o.date.setFullYear(o.date.getFullYear() + o.yearInc);\r\n                };\r\n            };\r\n\r\n            // Make sure the internal date is within range\r\n            o.outOfRange();\r\n\r\n            // Disable/enable the today button\r\n            if(!o.noToday) {\r\n                o.disableTodayButton();\r\n            };\r\n\r\n            // Disable/enable the month & year buttons\r\n            o.showHideButtons(o.date);\r\n\r\n            var cd = o.date.getDate(),\r\n                cm = o.date.getMonth(),\r\n                cy = o.date.getFullYear(),\r\n                cursorDate = (String(cy) + pad(cm+1) + pad(cd)),\r\n                tmpDate    = new Date(cy, cm, 1, 5, 0, 0);\r\n\r\n            tmpDate.setHours(5);\r\n\r\n            var dt, dts, cName, row, td, i, currentDate, cellAdded, col, currentStub, abbr, bespokeRenderClass, spnC, dateSetD, selectable, weekDay,\r\n                // Weekday of the fist of the month\r\n                weekDayC            = (tmpDate.getDay() + 6) % 7,\r\n                // The column index this weekday will occupy\r\n                firstColIndex       = (((weekDayC - o.firstDayOfWeek) + 7 ) % 7) - 1,\r\n                // The number of days in the current month\r\n                dpm                 = daysInMonth(cm, cy),\r\n                // Today as a Date Object\r\n                today               = new Date(),\r\n                // Today as a YYYYMMDD String\r\n                today               = today.getFullYear() + pad(today.getMonth()+1) + pad(today.getDate()),\r\n                // A Sring date stub in a YYYYMM format for the current date\r\n                stub                = String(tmpDate.getFullYear()) + pad(tmpDate.getMonth()+1),\r\n                //\r\n                cellAdded           = [4,4,4,4,4,4],\r\n                // The first day of the previous month as a Date Object\r\n                lm                  = new Date(cy, cm-1, 1, 5, 0, 0),\r\n                // The first day of the next month as a Date Object\r\n                nm                  = new Date(cy, cm+1, 1, 5, 0, 0),\r\n                // The number of days in the previous month\r\n                daySub              = daysInMonth(lm.getMonth(), lm.getFullYear()),\r\n                // YYYYMM String date stub for the next month\r\n                stubN               = String(nm.getFullYear()) + pad(nm.getMonth()+1),\r\n                // YYYYMM String date stub for the previous month\r\n                stubP               = String(lm.getFullYear()) + pad(lm.getMonth()+1),\r\n                weekDayN            = (nm.getDay() + 6) % 7,\r\n                weekDayP            = (lm.getDay() + 6) % 7,\r\n                // A SPAN node to clone when adding dates to individual cells\r\n                spn                 = document.createElement('span');\r\n\r\n            // Give the \"fd-screen-reader\" class to the span in order to hide them in the UI\r\n            // but keep them accessible to screen-readers\r\n            spn.className       = \"fd-screen-reader\";\r\n\r\n            // The first & last dates shown on the datepicker UI - could be a date from the previous & next month respectively\r\n            o.firstDateShown    = !o.constrainSelection && o.fillGrid && (0 - firstColIndex < 1) ? String(stubP) + (daySub + (0 - firstColIndex)) : stub + \"01\";\r\n            o.lastDateShown     = !o.constrainSelection && o.fillGrid ? stubN + pad(41 - firstColIndex - dpm) : stub + String(dpm);\r\n\r\n            // Store a reference to the current YYYYMM String representation of the current month\r\n            o.currentYYYYMM     = stub;\r\n\r\n            bespokeRenderClass  = o.callback(\"redraw\", {id:o.id, dd:pad(cd), mm:pad(cm+1), yyyy:cy, firstDateDisplayed:o.firstDateShown, lastDateDisplayed:o.lastDateShown}) || {};\r\n\r\n            // An Object of dates that have been explicitly disabled (1) or enabled (0)\r\n            dts                 = o.getDateExceptions(cy, cm+1);\r\n\r\n            // Double check current date within limits etc\r\n            o.checkSelectedDate();\r\n            //\r\n            dateSetD            = (o.dateSet != null) ? o.dateSet.getFullYear() + pad(o.dateSet.getMonth()+1) + pad(o.dateSet.getDate()) : false;\r\n\r\n            // If we have selected a date then set its ARIA selected property\r\n            // to false. We then set the ARIA selected property to true on the\r\n            // newly selected cell after redrawing the table\r\n            if(this.selectedTD != null) {\r\n                setARIAProperty(this.selectedTD, \"selected\", false);\r\n                this.selectedTD = null;\r\n            };\r\n\r\n            // Redraw all of the table cells representing the date parts of the UI\r\n            for(var curr = 0; curr < 42; curr++) {\r\n                // Current row\r\n                row  = Math.floor(curr / 7);\r\n                // Current TD node\r\n                td   = o.tds[curr];\r\n                // Clone our SPAN node\r\n                spnC = spn.cloneNode(false);\r\n                // Remove any previous contents from the cell\r\n                removeChildNodes(td);\r\n\r\n                // If the current cell contains a date\r\n                if((curr > firstColIndex && curr <= (firstColIndex + dpm)) || o.fillGrid) {\r\n                    currentStub     = stub;\r\n                    weekDay         = weekDayC;\r\n                    dt              = curr - firstColIndex;\r\n                    cName           = [];\r\n                    selectable      = true;\r\n\r\n                    // Are we drawing last month\r\n                    if(dt < 1) {\r\n                        dt              = daySub + dt;\r\n                        currentStub     = stubP;\r\n                        weekDay         = weekDayP;\r\n                        selectable      = !o.constrainSelection;\r\n                        cName.push(\"month-out\");\r\n                    // Are we drawing next month\r\n                    } else if(dt > dpm) {\r\n                        dt -= dpm;\r\n                        currentStub     = stubN;\r\n                        weekDay         = weekDayN;\r\n                        selectable      = !o.constrainSelection;\r\n                        cName.push(\"month-out\");\r\n                    };\r\n\r\n                    // Calcuate this cells weekday\r\n                    weekDay = (weekDay + dt + 6) % 7;\r\n\r\n                    // Push a classname representing the weekday e.g. \"day-3\"\r\n                    cName.push(\"day-\" + weekDay + \" cell-\" + curr);\r\n\r\n                    // A YYYYMMDD String representation of this cells date\r\n                    currentDate = currentStub + String(dt < 10 ? \"0\" : \"\") + dt;\r\n\r\n                    // If this cells date is out of range\r\n                    if(o.rangeLow && +currentDate < +o.rangeLow || o.rangeHigh && +currentDate > +o.rangeHigh) {\r\n                        // Add a classname to style the cell and stop selection\r\n                        td.className = \"out-of-range\";\r\n                        // Reset this TD nodes title attribute\r\n                        td.title = \"\";\r\n                        // Append the cells date as a text node to the TD\r\n                        td.appendChild(document.createTextNode(dt));\r\n                        // Jaysus, what the feck does this line do again...\r\n                        if(o.showWeeks) {\r\n                            cellAdded[row] = Math.min(cellAdded[row], 2);\r\n                        };\r\n                    // This cells date is within the lower & upper ranges (or no ranges have been defined)\r\n                    } else {\r\n                        // If it's a date from last or next month and the \"constrainSelection\" option\r\n                        // is false then give the cell a CD-YYYYMMDD class\r\n                        if(selectable) {\r\n                            td.title = titleFormat ? printFormattedDate(new Date(+String(currentStub).substr(0,4), +String(currentStub).substr(4, 2) - 1, +dt, 5, 0, 0), titleFormat, true) : \"\";\r\n                            cName.push(\"cd-\" + currentDate + \" yyyymmdd-\" + currentDate + \" yyyymm-\" + currentStub + \" mmdd-\" + currentStub.substr(4,2) + pad(dt));\r\n                        // Otherwise give a \"not-selectable\" class (which shouldn't be styled in any way, it's for internal use)\r\n                        } else {\r\n                            td.title = titleFormat ? getTitleTranslation(13) + \" \" + printFormattedDate(new Date(+String(currentStub).substr(0,4), +String(currentStub).substr(4, 2) - 1, +dt, 5, 0, 0), titleFormat, true) : \"\";\r\n                            cName.push(\"yyyymmdd-\" + currentDate + \" yyyymm-\" + currentStub + \" mmdd-\" + currentStub.substr(4,2) + pad(dt) + \" not-selectable\");\r\n                        };\r\n\r\n                        // Add a classname if the current cells date is today\r\n                        if(currentDate == today) {\r\n                            cName.push(\"date-picker-today\");\r\n                        };\r\n\r\n                        // If this cell represents the currently selected date\r\n                        if(dateSetD == currentDate) {\r\n                            // Add a classname (for styling purposes)\r\n                            cName.push(\"date-picker-selected-date\");\r\n                            // Set the ARIA selected property to true\r\n                            setARIAProperty(td, \"selected\", \"true\");\r\n                            // And cache a reference to the current cell\r\n                            this.selectedTD = td;\r\n                        };\r\n\r\n                        // If the current cell has been explicitly disabled\r\n                        if(((currentDate in dts) && dts[currentDate] == 1)\r\n                           // or\r\n                           ||\r\n                           // ... the current weekday has been disabled\r\n                           (o.disabledDays[weekDay]\r\n                            &&\r\n                           // ... and the current date has not been explicitly enabled\r\n                           !((currentDate in dts) && dts[currentDate] == 0)\r\n                           )\r\n                          ) {\r\n                            // Add a classname to style the cell and stop selection\r\n                            cName.push(\"day-disabled\");\r\n                            // Update the current cells title to say \"Disabled date: ...\" (or whatever the translation says)\r\n                            if(titleFormat && selectable) {\r\n                                td.title = getTitleTranslation(13) + \" \" + td.title;\r\n                            };\r\n                        };\r\n\r\n                        // Has the redraw callback given us a bespoke classname to add to this cell\r\n                        if(currentDate in bespokeRenderClass) {\r\n                            cName.push(bespokeRenderClass[currentDate]);\r\n                        };\r\n\r\n                        // Do we need to highlight this cells weekday representation\r\n                        if(o.highlightDays[weekDay]) {\r\n                            cName.push(\"date-picker-highlight\");\r\n                        };\r\n\r\n                        // Is the current onscreen cursor set to this cells date\r\n                        if(cursorDate == currentDate) {\r\n                            td.id = o.id + \"-date-picker-hover\";\r\n                        };\r\n\r\n                        // Add the date to the TD cell as a text node. Note: If the datepicker has been given keyboard\r\n                        // events, this textnode is replaced by a more screen-reader friendly date during the focus event\r\n                        td.appendChild(document.createTextNode(dt));\r\n\r\n                        // Add the classnames to the TD node\r\n                        td.className = cName.join(\" \");\r\n\r\n                        // If the UI displays week numbers then update the celladded\r\n                        if(o.showWeeks) {\r\n                            cellAdded[row] = Math.min(cName[0] == \"month-out\" ? 3 : 1, cellAdded[row]);\r\n                        };\r\n                    };\r\n                // The current TD node is empty i.e. represents no date in the UI\r\n                } else {\r\n                    // Add a classname to style the cell\r\n                    td.className = \"date-picker-unused\";\r\n                    // Add a non-breaking space to unused TD node (for IEs benefit mostly)\r\n                    td.appendChild(document.createTextNode(nbsp));\r\n                    // Reset the TD nodes title attribute\r\n                    td.title = \"\";\r\n                };\r\n                // Do we update the week number for this row\r\n                if(o.showWeeks && curr - (row * 7) == 6) {\r\n                    removeChildNodes(o.wkThs[row]);\r\n                    o.wkThs[row].appendChild(document.createTextNode(cellAdded[row] == 4 && !o.fillGrid ? nbsp : getWeekNumber(cy, cm, curr - firstColIndex - 6)));\r\n                    o.wkThs[row].className = \"date-picker-week-header\" + ([\"\",\"\",\" out-of-range\",\" month-out\",\"\"][cellAdded[row]]);\r\n                };\r\n            };\r\n\r\n            // Update the UI title bar displaying the year & month\r\n            var span = o.titleBar.getElementsByTagName(\"span\");\r\n            removeChildNodes(span[0]);\r\n            removeChildNodes(span[1]);\r\n            span[0].appendChild(document.createTextNode(getMonthTranslation(cm, false) + nbsp));\r\n            span[1].appendChild(document.createTextNode(cy));\r\n\r\n            // If we are in an animation\r\n            if(o.timerSet) {\r\n                // Speed the timer up a little bit to make the pause between updates quicker\r\n                o.timerInc = 50 + Math.round(((o.timerInc - 50) / 1.8));\r\n                // Recall this function in a timeout\r\n                o.timer = window.setTimeout(o.updateTable, o.timerInc);\r\n            };\r\n\r\n            // We are not currently updating the UI\r\n            o.inUpdate = o.delayedUpdate = false;\r\n            // Focus on the correct TD node\r\n            o.setNewFocus();\r\n        };\r\n\r\n        // Removes all scaffold from the DOM & events from memory\r\n        this.destroy = function() {\r\n\r\n            // Remove the button if it exists\r\n            if(document.getElementById(\"fd-but-\" + this.id)) {\r\n                document.getElementById(\"fd-but-\" + this.id).parentNode.removeChild(document.getElementById(\"fd-but-\" + this.id));\r\n            };\r\n\r\n            if(!this.created) {\r\n                return;\r\n            };\r\n\r\n            // Event cleanup for Internet Explorers benefit\r\n            removeEvent(this.table, \"mousedown\", o.onmousedown);\r\n            removeEvent(this.table, \"mouseover\", o.onmouseover);\r\n            removeEvent(this.table, \"mouseout\", o.onmouseout);\r\n            removeEvent(document, \"mousedown\", o.onmousedown);\r\n            removeEvent(document, \"mouseup\",   o.clearTimer);\r\n\r\n            if (window.addEventListener && !window.devicePixelRatio) {\r\n                try {\r\n                    window.removeEventListener('DOMMouseScroll', this.onmousewheel, false);\r\n                } catch(err) {};\r\n            } else {\r\n                removeEvent(document, \"mousewheel\", this.onmousewheel);\r\n                removeEvent(window,   \"mousewheel\", this.onmousewheel);\r\n            };\r\n            o.removeOnFocusEvents();\r\n            clearTimeout(o.fadeTimer);\r\n            clearTimeout(o.timer);\r\n\r\n            if(oldIE === 6 && !o.staticPos) {\r\n                try {\r\n                    o.iePopUp.parentNode.removeChild(o.iePopUp);\r\n                    o.iePopUp = null;\r\n                } catch(err) {};\r\n            };\r\n            \r\n            if(this.div && this.div.parentNode) {\r\n                this.div.parentNode.removeChild(this.div);\r\n            };\r\n\r\n            o = null;\r\n        };\r\n\r\n        this.resizeInlineDiv = function()  {\r\n            o.div.style.width = o.table.offsetWidth + \"px\";\r\n            o.div.style.height = o.table.offsetHeight + \"px\";\r\n        };\r\n\r\n        this.reset = function() {\r\n            var elemID, elem;\r\n            for(elemID in o.formElements) {\r\n                elem = document.getElementById(elemID);\r\n                if(elem) {\r\n                    if(elem.tagName.toLowerCase() == \"select\") {\r\n                        elem.selectedIndex = o.defaultVals[elemID];\r\n                    } else {\r\n                        elem.value = o.defaultVals[elemID];\r\n                    };\r\n                };\r\n            };\r\n            o.changeHandler();\r\n        };\r\n\r\n        // Creates the DOM scaffold\r\n        this.create = function() {\r\n\r\n            if(document.getElementById(\"fd-\" + this.id)) {\r\n                return;\r\n            };\r\n\r\n            var tr, row, col, tableHead, tableBody, tableFoot;\r\n\r\n            this.noFocus = true;\r\n\r\n            function createTH(details) {\r\n                var th = document.createElement('th');\r\n                if(details.thClassName) {\r\n                    th.className = details.thClassName;\r\n                };\r\n                if(details.colspan) {\r\n                    th.setAttribute(oldIE ? 'colSpan' : \"colspan\", details.colspan);\r\n                };\r\n                th.unselectable = \"on\";\r\n                return th;\r\n            };\r\n            function createThAndButton(tr, obj) {\r\n                for(var i = 0, details; details = obj[i]; i++) {\r\n                    var th = createTH(details);\r\n                    tr.appendChild(th);\r\n                    var but = document.createElement('span');\r\n                    but.className = details.className;\r\n                    but.id = o.id + details.id;\r\n                    but.appendChild(document.createTextNode(details.text || o.nbsp));\r\n                    but.title = details.title || \"\";\r\n                    but.unselectable = \"on\";\r\n                    th.appendChild(but);\r\n                };\r\n            };\r\n\r\n            this.div                     = document.createElement('div');\r\n            this.div.id                  = \"fd-\" + this.id;\r\n            this.div.className           = \"date-picker\" + (cssAnimations ? \" fd-dp-fade \" : \"\") + this.bespokeClass;\r\n\r\n            // Attempt to hide the div from screen readers during content creation\r\n            this.div.style.visibility = \"hidden\";\r\n            this.div.style.display = \"none\";\r\n\r\n            // Set the ARIA describedby property if the required block available\r\n            if(this.describedBy && document.getElementById(this.describedBy)) {\r\n                setARIAProperty(this.div, \"describedby\", this.describedBy);\r\n            };\r\n\r\n            // Set the ARIA labelled property if the required label available\r\n            if(this.labelledBy) {\r\n                setARIAProperty(this.div, \"labelledby\", this.labelledBy.id);\r\n            };\r\n\r\n            this.idiv                     = document.createElement('div');\r\n\r\n            this.table             = document.createElement('table');\r\n            this.table.className   = \"date-picker-table\";\r\n            this.table.onmouseover = this.onmouseover;\r\n            this.table.onmouseout  = this.onmouseout;\r\n            this.table.onclick     = this.onclick;\r\n\r\n            if(this.finalOpacity < 100) {\r\n                this.idiv.style.opacity = Math.min(Math.max(parseInt(this.finalOpacity, 10) / 100, .2), 1);\r\n            };\r\n\r\n            if(this.staticPos) {\r\n                this.table.onmousedown  = this.onmousedown;\r\n            };\r\n\r\n            this.div.appendChild(this.idiv);\r\n            this.idiv.appendChild(this.table);\r\n\r\n            var dragEnabledCN = !this.dragDisabled ? \" drag-enabled\" : \"\";\r\n\r\n            if(!this.staticPos) {\r\n                this.div.style.visibility = \"hidden\";\r\n                this.div.className += dragEnabledCN;\r\n                document.getElementsByTagName('body')[0].appendChild(this.div);\r\n\r\n                if(oldIE === 6) {\r\n                    this.iePopUp = document.createElement('iframe');\r\n                    this.iePopUp.src = \"javascript:'<html></html>';\";\r\n                    this.iePopUp.setAttribute('className','iehack');\r\n                    // Remove iFrame from tabIndex\r\n                    this.iePopUp.setAttribute(\"tabIndex\", -1);\r\n                    // Hide it from ARIA aware technologies\r\n                    setARIARole(this.iePopUp, \"presentation\");\r\n                    setARIAProperty(this.iePopUp, \"hidden\", \"true\");\r\n                    this.iePopUp.scrolling = \"no\";\r\n                    this.iePopUp.frameBorder = \"0\";\r\n                    this.iePopUp.name = this.iePopUp.id = this.id + \"-iePopUpHack\";\r\n                    document.body.appendChild(this.iePopUp);\r\n                };\r\n\r\n                // Aria \"hidden\" property for non active popup datepickers\r\n                setARIAProperty(this.div, \"hidden\", \"true\");\r\n            } else {\r\n                var elem = document.getElementById(this.positioned ? this.positioned : this.id);\r\n                if(!elem) {\r\n                    this.div = null;\r\n                    if(debug) {\r\n                        throw this.positioned ? \"Could not locate a datePickers associated parent element with an id:\" + this.positioned : \"Could not locate a datePickers associated input with an id:\" + this.id;\r\n                    };\r\n                    return;\r\n                };\r\n\r\n                this.div.className += \" static-datepicker\";\r\n\r\n                if(this.positioned) {\r\n                    elem.appendChild(this.div);\r\n                } else {\r\n                    elem.parentNode.insertBefore(this.div, elem.nextSibling);\r\n                };\r\n\r\n                if(this.hideInput) {\r\n                    for(var elemID in this.formElements) {\r\n                        elem = document.getElementById(elemID);\r\n                        if(elem) {\r\n                            elem.className += \" fd-hidden-input\";\r\n                        };\r\n                    };\r\n                };\r\n\r\n                setTimeout(this.resizeInlineDiv, 300);\r\n            };\r\n            // ARIA Application role\r\n            setARIARole(this.div, \"application\");\r\n            //setARIARole(this.table, \"grid\");\r\n\r\n            if(this.statusFormat) {\r\n                tableFoot = document.createElement('tfoot');\r\n                this.table.appendChild(tableFoot);\r\n                tr = document.createElement('tr');\r\n                tr.className = \"date-picker-tfoot\";\r\n                tableFoot.appendChild(tr);\r\n                this.statusBar = createTH({thClassName:\"date-picker-statusbar\" + dragEnabledCN, colspan:this.showWeeks ? 8 : 7});\r\n                tr.appendChild(this.statusBar);\r\n                this.updateStatus();\r\n            };\r\n\r\n            tableHead = document.createElement('thead');\r\n            tableHead.className = \"date-picker-thead\";\r\n            this.table.appendChild(tableHead);\r\n\r\n            tr  = document.createElement('tr');\r\n            setARIARole(tr, \"presentation\");\r\n\r\n            tableHead.appendChild(tr);\r\n\r\n            // Title Bar\r\n            this.titleBar = createTH({thClassName:\"date-picker-title\" + dragEnabledCN, colspan:this.showWeeks ? 8 : 7});\r\n\r\n            tr.appendChild(this.titleBar);\r\n            tr = null;\r\n\r\n            var span = document.createElement('span');\r\n            span.appendChild(document.createTextNode(nbsp));\r\n            span.className = \"month-display\" + dragEnabledCN;\r\n            this.titleBar.appendChild(span);\r\n\r\n            span = document.createElement('span');\r\n            span.appendChild(document.createTextNode(nbsp));\r\n            span.className = \"year-display\" + dragEnabledCN;\r\n            this.titleBar.appendChild(span);\r\n\r\n            span = null;\r\n\r\n            tr  = document.createElement('tr');\r\n            setARIARole(tr, \"presentation\");\r\n            tableHead.appendChild(tr);\r\n\r\n            createThAndButton(tr, [\r\n            {className:\"prev-but prev-year\",  id:\"-prev-year-but\", text:\"\\u00AB\", title:getTitleTranslation(2) },\r\n            {className:\"prev-but prev-month\", id:\"-prev-month-but\", text:\"\\u2039\", title:getTitleTranslation(0) },\r\n            {colspan:this.showWeeks ? 4 : 3, className:\"today-but\", id:\"-today-but\", text:getTitleTranslation(4)},\r\n            {className:\"next-but next-month\", id:\"-next-month-but\", text:\"\\u203A\", title:getTitleTranslation(1)},\r\n            {className:\"next-but next-year\",  id:\"-next-year-but\", text:\"\\u00BB\", title:getTitleTranslation(3) }\r\n            ]);\r\n\r\n            tableBody = document.createElement('tbody');\r\n            this.table.appendChild(tableBody);\r\n\r\n            var colspanTotal = this.showWeeks ? 8 : 7,\r\n                colOffset    = this.showWeeks ? 0 : -1,\r\n                but, abbr, formElemId, formElem;\r\n\r\n            for(var rows = 0; rows < 7; rows++) {\r\n                row = document.createElement('tr');\r\n\r\n                if(rows != 0) {\r\n                    // ARIA Grid role\r\n                    setARIARole(row, \"row\");\r\n                    tableBody.appendChild(row);\r\n                } else {\r\n                    tableHead.appendChild(row);\r\n                };\r\n\r\n                for(var cols = 0; cols < colspanTotal; cols++) {\r\n                    if(rows === 0 || (this.showWeeks && cols === 0)) {\r\n                        col = document.createElement('th');\r\n                    } else {\r\n                        col = document.createElement('td');\r\n                        setARIAProperty(col, \"describedby\", this.id + \"-col-\" + cols + (this.showWeeks ? \" \" + this.id + \"-row-\" + rows : \"\"));\r\n                        setARIAProperty(col, \"selected\", \"false\");\r\n                    };\r\n\r\n                    if(oldIE) {\r\n                        col.unselectable = \"on\";\r\n                    };\r\n\r\n                    row.appendChild(col);\r\n                    if((this.showWeeks && cols > 0 && rows > 0) || (!this.showWeeks && rows > 0)) {\r\n                        //setARIARole(col, \"gridcell\");\r\n                    } else {\r\n                        if(rows === 0 && cols > colOffset) {\r\n                            col.className = \"date-picker-day-header\";\r\n                            col.scope = \"col\";\r\n                            //setARIARole(col, \"columnheader\");\r\n                            col.id = this.id + \"-col-\" + cols;\r\n                        } else {\r\n                            col.className = \"date-picker-week-header\";\r\n                            col.scope = \"row\";\r\n                            //setARIARole(col, \"rowheader\");\r\n                            col.id = this.id + \"-row-\" + rows;\r\n                        };\r\n                    };\r\n                };\r\n            };\r\n\r\n            col = row = null;\r\n\r\n            this.ths = this.table.getElementsByTagName('thead')[0].getElementsByTagName('tr')[2].getElementsByTagName('th');\r\n\r\n            for (var y = 0; y < colspanTotal; y++) {\r\n\r\n                if(y == 0 && this.showWeeks) {\r\n                    this.ths[y].appendChild(document.createTextNode(getTitleTranslation(6)));\r\n                    this.ths[y].title = getTitleTranslation(8);\r\n                    continue;\r\n                };\r\n\r\n                if(y > (this.showWeeks ? 0 : -1)) {\r\n                    but = document.createElement(\"span\");\r\n                    but.className = \"fd-day-header\";\r\n                    if(oldIE) {\r\n                        but.unselectable = \"on\";\r\n                    };\r\n                    this.ths[y].appendChild(but);\r\n                };\r\n            };\r\n\r\n            but = null;\r\n\r\n            this.trs             = this.table.getElementsByTagName('tbody')[0].getElementsByTagName('tr');\r\n            this.tds             = this.table.getElementsByTagName('tbody')[0].getElementsByTagName('td');\r\n            this.butPrevYear     = document.getElementById(this.id + \"-prev-year-but\");\r\n            this.butPrevMonth    = document.getElementById(this.id + \"-prev-month-but\");\r\n            this.butToday        = document.getElementById(this.id + \"-today-but\");\r\n            this.butNextYear     = document.getElementById(this.id + \"-next-year-but\");\r\n            this.butNextMonth    = document.getElementById(this.id + \"-next-month-but\");\r\n\r\n            if(this.noToday) {\r\n                this.butToday.style.display = \"none\";\r\n            };\r\n\r\n            if(this.showWeeks) {\r\n                this.wkThs = this.table.getElementsByTagName('tbody')[0].getElementsByTagName('th');\r\n                this.div.className += \" weeks-displayed\";\r\n            };\r\n\r\n            tableBody = tableHead = tr = createThAndButton = createTH = null;\r\n\r\n            this.updateTableHeaders();\r\n            this.created = true;\r\n            this.updateTable();\r\n\r\n            if(this.staticPos) {\r\n                this.visible = true;\r\n                this.opacity = 100;\r\n                this.div.style.visibility = \"visible\";\r\n                this.div.style.display = \"block\";\r\n                this.noFocus = true;\r\n                this.fade();\r\n            } else {\r\n                this.reposition();\r\n                this.div.style.visibility = \"visible\";\r\n                this.fade();\r\n                this.noFocus = true;\r\n            };\r\n\r\n            this.callback(\"domcreate\", { \"id\":this.id });\r\n        };\r\n\r\n        this.transEnd = function() {\r\n            o.div.style.display     = \"none\";\r\n            o.div.style.visibility  = \"hidden\";\r\n            setARIAProperty(o.div, \"hidden\", \"true\");\r\n        };\r\n\r\n        this.fade = function() {\r\n            window.clearTimeout(o.fadeTimer);\r\n            o.fadeTimer = null;\r\n            if(cssAnimations) {\r\n                o.opacity = o.opacityTo;\r\n                if(o.opacityTo == 0) {\r\n                    o.visible = false;\r\n                    addEvent(o.div, transitionEnd, o.transEnd);\r\n                    addClass(o.div, \"fd-dp-fade\");\r\n                } else {\r\n                    removeEvent(o.div, transitionEnd, o.transEnd);\r\n                    o.visible               = true;\r\n                    o.div.style.display     = \"block\";\r\n                    o.div.style.visibility  = \"visible\";\r\n                    setARIAProperty(o.div, \"hidden\", \"false\");\r\n                    removeClass(o.div, \"fd-dp-fade\");\r\n                };\r\n                return;\r\n            };\r\n\r\n            var diff = Math.round(o.opacity + ((o.opacityTo - o.opacity) / 4));\r\n            o.setOpacity(diff);\r\n            if(Math.abs(o.opacityTo - diff) > 3 && !o.noFadeEffect) {\r\n                o.fadeTimer = window.setTimeout(o.fade, 50);\r\n            } else {\r\n                o.setOpacity(o.opacityTo);\r\n                if(o.opacityTo == 0) {\r\n                    o.div.style.display    = \"none\";\r\n                    o.div.style.visibility = \"hidden\";\r\n                    setARIAProperty(o.div, \"hidden\", \"true\");\r\n                    o.visible = false;\r\n                } else {\r\n                    setARIAProperty(o.div, \"hidden\", \"false\");\r\n                    o.visible = true;\r\n                };\r\n            };\r\n        };\r\n        this.trackDrag = function(e) {\r\n            e = e || window.event;\r\n            var diffx = (e.pageX?e.pageX:e.clientX?e.clientX:e.x) - o.mx;\r\n            var diffy = (e.pageY?e.pageY:e.clientY?e.clientY:e.Y) - o.my;\r\n            o.div.style.left = Math.round(o.x + diffx) > 0 ? Math.round(o.x + diffx) + 'px' : \"0px\";\r\n            o.div.style.top  = Math.round(o.y + diffy) > 0 ? Math.round(o.y + diffy) + 'px' : \"0px\";\r\n            if(oldIE === 6 && !o.staticPos) {\r\n                o.iePopUp.style.top    = o.div.style.top;\r\n                o.iePopUp.style.left   = o.div.style.left;\r\n            };\r\n        };\r\n        this.stopDrag = function(e) {\r\n            var b = document.getElementsByTagName(\"body\")[0];\r\n            removeClass(b, \"fd-drag-active\");\r\n            removeEvent(document,'mousemove',o.trackDrag, false);\r\n            removeEvent(document,'mouseup',o.stopDrag, false);\r\n            o.div.style.zIndex = 9999;\r\n        };\r\n        this.onmousedown = function(e) {\r\n            e = e || document.parentWindow.event;\r\n            var el     = e.target != null ? e.target : e.srcElement,\r\n                origEl = el,\r\n                hideDP = true,\r\n                reg    = new RegExp(\"^fd-(but-)?\" + o.id + \"$\");\r\n\r\n            o.mouseDownElem = null;\r\n\r\n            // Are we within the wrapper div or the button\r\n            while(el) {\r\n                if(el.id && el.id.length && el.id.search(reg) != -1) {\r\n                    hideDP = false;\r\n                    break;\r\n                };\r\n                try {\r\n                    el = el.parentNode;\r\n                } catch(err) {\r\n                    break;\r\n                };\r\n            };\r\n\r\n            // If not, then ...\r\n            if(hideDP) {\r\n                hideAll();\r\n                return true;\r\n            };\r\n\r\n            if((o.div.className + origEl.className).search('fd-disabled') != -1) {\r\n                return true;\r\n            };\r\n\r\n            // We check the mousedown events on the buttons\r\n            if(origEl.id.search(new RegExp(\"^\" + o.id + \"(-prev-year-but|-prev-month-but|-next-month-but|-next-year-but)$\")) != -1) {\r\n\r\n                o.mouseDownElem = origEl;\r\n\r\n                addEvent(document, \"mouseup\", o.clearTimer);\r\n                addEvent(origEl, \"mouseout\",  o.clearTimer);\r\n\r\n                var incs = {\r\n                        \"-prev-year-but\":[0,-1,0],\r\n                        \"-prev-month-but\":[0,0,-1],\r\n                        \"-next-year-but\":[0,1,0],\r\n                        \"-next-month-but\":[0,0,1]\r\n                    },\r\n                    check = origEl.id.replace(o.id, \"\"),\r\n                    dateYYYYMM = Number(o.date.getFullYear() + pad(o.date.getMonth()+1));\r\n\r\n                o.timerInc      = 800;\r\n                o.timerSet      = true;\r\n                o.dayInc        = incs[check][0];\r\n                o.yearInc       = incs[check][1];\r\n                o.monthInc      = incs[check][2];\r\n                o.accellerator  = 1;\r\n\r\n                if(!(o.currentYYYYMM == dateYYYYMM)) {\r\n                    if((o.currentYYYYMM < dateYYYYMM && (o.yearInc == -1 || o.monthInc == -1)) || (o.currentYYYYMM > dateYYYYMM && (o.yearInc == 1 || o.monthInc == 1))) {\r\n                        o.delayedUpdate = false;\r\n                        o.timerInc = 1200;\r\n                    } else {\r\n                        o.delayedUpdate = true;\r\n                    };\r\n                };\r\n\r\n                o.updateTable();\r\n\r\n                return stopEvent(e);\r\n\r\n            } else if(el.className.search(\"drag-enabled\") != -1) {\r\n                    o.mx = e.pageX ? e.pageX : e.clientX ? e.clientX : e.x;\r\n                    o.my = e.pageY ? e.pageY : e.clientY ? e.clientY : e.Y;\r\n                    o.x  = parseInt(o.div.style.left, 10);\r\n                    o.y  = parseInt(o.div.style.top, 10);\r\n                    addEvent(document,'mousemove',o.trackDrag, false);\r\n                    addEvent(document,'mouseup',o.stopDrag, false);\r\n                    addClass(document.getElementsByTagName(\"body\")[0], \"fd-drag-active\");\r\n                    o.div.style.zIndex = 10000;\r\n\r\n                    return stopEvent(e);\r\n            };\r\n            return true;\r\n        };\r\n        this.onclick = function(e) {\r\n            if((!cssAnimations && o.opacity != o.opacityTo) || o.disabled) {\r\n                return stopEvent(e);\r\n            };\r\n\r\n            e = e || document.parentWindow.event;\r\n            var el = e.target != null ? e.target : e.srcElement;\r\n\r\n            while(el.parentNode) {\r\n                // Are we within a valid i.e. clickable TD node\r\n                if(el.tagName && el.tagName.toLowerCase() == \"td\") {\r\n\r\n                    if(el.className.search(/cd-([0-9]{8})/) == -1 || el.className.search(noSelectionRegExp) != -1) {\r\n                        return stopEvent(e);\r\n                    };\r\n\r\n                    var cellDate = el.className.match(/cd-([0-9]{8})/)[1];\r\n                    o.date       = new Date(cellDate.substr(0,4),cellDate.substr(4,2)-1,cellDate.substr(6,2), 5, 0, 0);\r\n                    o.dateSet    = new Date(o.date);\r\n                    o.noFocus    = true;\r\n                    o.callback(\"dateset\", { \"id\":o.id, \"date\":o.dateSet, \"dd\":o.dateSet.getDate(), \"mm\":o.dateSet.getMonth() + 1, \"yyyy\":o.dateSet.getFullYear() });\r\n                    o.returnFormattedDate();\r\n                    o.hide();\r\n                    o.stopTimer();\r\n                    break;\r\n                } else if(el.id && el.id == o.id + \"-today-but\") {\r\n                    o.date = new Date();\r\n                    o.updateTable();\r\n                    o.stopTimer();\r\n                    break;\r\n                } else if(el.className.search(/date-picker-day-header/) != -1) {\r\n                    var cnt = o.showWeeks ? -1 : 0,\r\n                        elem = el;\r\n\r\n                    while(elem.previousSibling) {\r\n                        elem = elem.previousSibling;\r\n                        if(elem.tagName && elem.tagName.toLowerCase() == \"th\") {\r\n                            cnt++;\r\n                        };\r\n                    };\r\n\r\n                    o.firstDayOfWeek = (o.firstDayOfWeek + cnt) % 7;\r\n                    o.updateTableHeaders();\r\n                    break;\r\n                };\r\n                try {\r\n                    el = el.parentNode;\r\n                } catch(err) {\r\n                    break;\r\n                };\r\n            };\r\n\r\n            return stopEvent(e);\r\n        };\r\n\r\n        this.show = function(autoFocus) {\r\n            if(this.staticPos) {\r\n                return;\r\n            };\r\n\r\n            var elem, elemID;\r\n            for(elemID in this.formElements) {\r\n                elem = document.getElementById(this.id);\r\n                if(!elem || (elem && elem.disabled)) {\r\n                    return;\r\n                };\r\n            };\r\n\r\n            this.noFocus = true;\r\n\r\n            // If the datepicker doesn't exist in the dom\r\n            if(!this.created || !document.getElementById('fd-' + this.id)) {\r\n                this.created    = false;\r\n                this.fullCreate = false;\r\n                this.create();\r\n                this.fullCreate = true;\r\n            } else {\r\n                this.setDateFromInput();\r\n                this.reposition();\r\n            };\r\n\r\n            this.noFocus = !!!autoFocus;\r\n\r\n            if(this.noFocus) {\r\n                this.clickActivated = true;\r\n                this.showCursor = false;\r\n                addEvent(document, \"mousedown\", this.onmousedown);\r\n                if(mouseWheel) {\r\n                    if (window.addEventListener && !window.devicePixelRatio) {\r\n                        window.addEventListener('DOMMouseScroll', this.onmousewheel, false);\r\n                    } else {\r\n                        addEvent(document, \"mousewheel\", this.onmousewheel);\r\n                        addEvent(window,   \"mousewheel\", this.onmousewheel);\r\n                    };\r\n                };\r\n            } else {\r\n                this.clickActivated = false;\r\n                this.showCursor = true;\r\n            };\r\n\r\n            this.opacityTo = 100;\r\n            this.div.style.display = \"block\";\r\n\r\n            if(oldIE === 6) {\r\n                this.iePopUp.style.width    = this.div.offsetWidth + \"px\";\r\n                this.iePopUp.style.height   = this.div.offsetHeight + \"px\";\r\n                this.iePopUp.style.display  = \"block\";\r\n            };\r\n\r\n            this.setNewFocus();\r\n            this.fade();\r\n            var butt = document.getElementById('fd-but-' + this.id);\r\n            if(butt) {\r\n                  addClass(butt, \"date-picker-button-active\");\r\n            };\r\n        };\r\n\r\n        this.hide = function() {\r\n            if(!this.visible || !this.created || !document.getElementById('fd-' + this.id)) {\r\n                return;\r\n            };\r\n\r\n            this.kbEvent = false;\r\n\r\n            removeClass(o.div, \"date-picker-focus\");\r\n\r\n            this.stopTimer();\r\n            this.removeOnFocusEvents();\r\n            this.clickActivated = false;\r\n            this.noFocus = true;\r\n            this.showCursor = false;\r\n            this.setNewFocus();\r\n\r\n            if(this.staticPos) {\r\n                return;\r\n            };\r\n\r\n            if(this.statusBar) {\r\n                this.updateStatus(getTitleTranslation(9));\r\n            };\r\n\r\n            var butt = document.getElementById('fd-but-' + this.id);\r\n\r\n            if(butt) {\r\n                removeClass(butt, \"date-picker-button-active\");\r\n            };\r\n\r\n            removeEvent(document, \"mousedown\", this.onmousedown);\r\n\r\n            if(mouseWheel) {\r\n                if (window.addEventListener && !window.devicePixelRatio) {\r\n                    try {\r\n                        window.removeEventListener('DOMMouseScroll', this.onmousewheel, false);\r\n                    } catch(err) {};\r\n                } else {\r\n                    removeEvent(document, \"mousewheel\", this.onmousewheel);\r\n                    removeEvent(window,   \"mousewheel\", this.onmousewheel);\r\n                };\r\n            };\r\n\r\n\r\n            if(oldIE === 6) {\r\n                this.iePopUp.style.display = \"none\";\r\n            };\r\n\r\n            this.opacityTo = 0;\r\n            this.fade();\r\n        };\r\n\r\n        this.onblur = function(e) {\r\n            o.removeCursorHighlight();\r\n            o.hide();\r\n        };\r\n        // The current cursor cell gains focus\r\n        this.onfocus = function(e) {\r\n            o.noFocus = false;\r\n            addClass(o.div, \"date-picker-focus\");\r\n            if(o.statusBar) {\r\n                o.updateStatus(printFormattedDate(o.date, o.statusFormat, true));\r\n            };\r\n            o.showCursor = true;\r\n            o.addCursorHighlight();\r\n            o.addOnFocusEvents();\r\n        };\r\n        this.onmousewheel = function(e) {\r\n            e = e || document.parentWindow.event;\r\n            var delta = 0;\r\n\r\n            if (e.wheelDelta) {\r\n                delta = e.wheelDelta/120;\r\n                if (isOpera && window.opera.version() < 9.2) {\r\n                    delta = -delta;\r\n                };\r\n            } else if(e.detail) {\r\n                delta = -e.detail/3;\r\n            };\r\n\r\n            var n = o.date.getDate(),\r\n                d = new Date(o.date),\r\n                inc = delta > 0 ? 1 : -1;\r\n\r\n            d.setDate(2);\r\n            d.setMonth(d.getMonth() + inc * 1);\r\n            d.setDate(Math.min(n, daysInMonth(d.getMonth(),d.getFullYear())));\r\n\r\n            if(o.outOfRange(d)) {\r\n                return stopEvent(e);\r\n            };\r\n\r\n            o.date = new Date(d);\r\n\r\n            o.updateTable();\r\n\r\n            if(o.statusBar) {\r\n                o.updateStatus(printFormattedDate(o.date, o.statusFormat, true));\r\n            };\r\n\r\n            return stopEvent(e);\r\n        };\r\n        this.onkeydown = function (e) {\r\n            o.stopTimer();\r\n\r\n            if(!o.visible) {\r\n                return false;\r\n            };\r\n\r\n            e = e || document.parentWindow.event;\r\n\r\n            var kc = e.keyCode ? e.keyCode : e.charCode;\r\n\r\n            if(kc == 13) {\r\n                // RETURN/ENTER: close & select the date\r\n                var td = document.getElementById(o.id + \"-date-picker-hover\");\r\n                if(!td || td.className.search(/cd-([0-9]{8})/) == -1 || td.className.search(/out-of-range|day-disabled/) != -1) {\r\n                    return stopEvent(e);\r\n                };\r\n                o.dateSet = new Date(o.date);\r\n                o.callback(\"dateset\", o.createCbArgObj());\r\n                o.returnFormattedDate();\r\n                o.hide();\r\n                return stopEvent(e);\r\n            } else if(kc == 27) {\r\n                // ESC: close, no date selection, refocus on popup button\r\n                if(!o.staticPos) {\r\n                    o.hide();\r\n                    var butt = document.getElementById('fd-but-' + o.id);\r\n                    if(butt) {\r\n                        setTimeout(function(){try{butt.focus()}catch(err){}},0);\r\n                    };\r\n                    return stopEvent(e);\r\n                };\r\n                return true;\r\n            } else if(kc == 32 || kc == 0) {\r\n                // SPACE: goto todays date\r\n                o.date = new Date();\r\n                o.updateTable();\r\n\r\n                return stopEvent(e);\r\n            } else if(kc == 9) {\r\n                // TAB: pass focus - non popup datepickers only\r\n                if(!o.staticPos) {\r\n                    return stopEvent(e);\r\n                };\r\n                return true;\r\n            };\r\n            // TODO - test the need for the IE specific stuff in IE9\r\n\r\n            // Internet Explorer fires the keydown event faster than the JavaScript engine can\r\n            // update the interface. The following attempts to fix this.\r\n\r\n            if(oldIE) {\r\n                if(new Date().getTime() - o.interval.getTime() < 50) { return stopEvent(e); };\r\n                o.interval = new Date();\r\n            };\r\n            \r\n            // A number key has been pressed so change the first day of the week\r\n            if((kc > 49 && kc < 56) || (kc > 97 && kc < 104)) {\r\n                if(kc > 96) {\r\n                    kc -= (96-48);\r\n                };\r\n                kc -= 49;\r\n                o.firstDayOfWeek = (o.firstDayOfWeek + kc) % 7;\r\n                o.updateTableHeaders();\r\n                return stopEvent(e);\r\n            };\r\n\r\n            // If outside any other tested keycodes then let the keystroke pass\r\n            if(kc < 33 || kc > 40) {\r\n                return true;\r\n            };\r\n\r\n            var d = new Date(o.date),\r\n                cursorYYYYMM = o.date.getFullYear() + pad(o.date.getMonth()+1),\r\n                tmp;\r\n\r\n            // HOME: Set date to first day of current month\r\n            if(kc == 36) {\r\n                d.setDate(1);\r\n            // END: Set date to last day of current month\r\n            } else if(kc == 35) {\r\n                d.setDate(daysInMonth(d.getMonth(),d.getFullYear()));\r\n            // PAGE UP & DOWN\r\n            } else if ( kc == 33 || kc == 34) {\r\n                var inc = (kc == 34) ? 1 : -1;\r\n\r\n                // CTRL + PAGE UP/DOWN: Moves to the same date in the previous/next year\r\n                if(e.ctrlKey) {\r\n                    d.setFullYear(d.getFullYear() + inc * 1);\r\n                // PAGE UP/DOWN: Moves to the same date in the previous/next month\r\n                } else {\r\n                    var n = o.date.getDate();\r\n\r\n                    d.setDate(2);\r\n                    d.setMonth(d.getMonth() + inc * 1);\r\n                    d.setDate(Math.min(n, daysInMonth(d.getMonth(),d.getFullYear())));\r\n                };\r\n            // LEFT ARROW\r\n            } else if ( kc == 37 ) {\r\n                d = new Date(o.date.getFullYear(), o.date.getMonth(), o.date.getDate() - 1, 5, 0, 0);\r\n            // RIGHT ARROW\r\n            } else if ( kc == 39 || kc == 34) {\r\n                d = new Date(o.date.getFullYear(), o.date.getMonth(), o.date.getDate() + 1, 5, 0, 0);\r\n            // UP ARROW\r\n            } else if ( kc == 38 ) {\r\n                d = new Date(o.date.getFullYear(), o.date.getMonth(), o.date.getDate() - 7, 5, 0, 0);\r\n            // DOWN ARROW\r\n            } else if ( kc == 40 ) {\r\n                d = new Date(o.date.getFullYear(), o.date.getMonth(), o.date.getDate() + 7, 5, 0, 0);\r\n            };\r\n\r\n            // If the new date is out of range then disallow action\r\n            if(o.outOfRange(d)) {\r\n                return stopEvent(e);\r\n            };\r\n\r\n            // Otherwise set the new cursor date\r\n            o.date = d;\r\n\r\n            // Update the status bar if needs be\r\n            if(o.statusBar) {\r\n                o.updateStatus(o.getBespokeTitle(o.date.getFullYear(),o.date.getMonth() + 1,o.date.getDate()) || printFormattedDate(o.date, o.statusFormat, true));\r\n            };\r\n\r\n            // YYYYMMDD format String of the current cursor date\r\n            var t = String(o.date.getFullYear()) + pad(o.date.getMonth()+1) + pad(o.date.getDate());\r\n\r\n            // If we need to redraw the UI completely\r\n            if(e.ctrlKey || (kc == 33 || kc == 34) || t < o.firstDateShown || t > o.lastDateShown) {\r\n                o.updateTable();\r\n                if(oldIE) {\r\n                    o.interval = new Date();\r\n                };\r\n            // Just highlight current cell\r\n            } else {\r\n                // Do we need to disable the today button for this date\r\n                if(!o.noToday) {\r\n                    o.disableTodayButton();\r\n                };\r\n                // Remove focus from the previous cell\r\n                o.removeOldFocus();\r\n                // Show/hide the month & year buttons\r\n                o.showHideButtons(o.date);\r\n\r\n                // Locate this TD\r\n                for(var i = 0, td; td = o.tds[i]; i++) {\r\n                    if(td.className.search(\"cd-\" + t) == -1) {\r\n                        continue;\r\n                    };\r\n\r\n                    td.id = o.id + \"-date-picker-hover\";\r\n                    o.setNewFocus();\r\n                    break;\r\n                };\r\n            };\r\n\r\n            return stopEvent(e);\r\n        };\r\n        this.onmouseout = function(e) {\r\n            e = e || document.parentWindow.event;\r\n            var p = e.toElement || e.relatedTarget;\r\n\r\n            while(p && p != this) {\r\n                try {\r\n                    p = p.parentNode;\r\n                } catch(e) {\r\n                    p = this;\r\n                };\r\n            };\r\n\r\n            if(p == this) {\r\n                return false;\r\n            };\r\n\r\n            if(o.clickActivated || (o.staticPos && !o.kbEventsAdded)) {\r\n                o.showCursor = false;\r\n                o.removeCursorHighlight();\r\n            };\r\n\r\n            if(o.currentTR) {\r\n                o.currentTR.className = \"\";\r\n                o.currentTR = null;\r\n            };\r\n\r\n            if(o.statusBar) {\r\n                o.updateStatus(o.dateSet ? o.getBespokeTitle(o.dateSet.getFullYear(),o.dateSet.getMonth() + 1,o.dateSet.getDate()) || printFormattedDate(o.dateSet, o.statusFormat, true) : getTitleTranslation(9));\r\n            };\r\n        };\r\n        this.onmouseover = function(e) {\r\n            e = e || document.parentWindow.event;\r\n            var el = e.target != null ? e.target : e.srcElement;\r\n            while(el.nodeType != 1) {\r\n                el = el.parentNode;\r\n            };\r\n\r\n            if(!el || ! el.tagName) {\r\n                return;\r\n            };\r\n\r\n            o.noFocus = true;\r\n\r\n            var statusText = getTitleTranslation(9);\r\n            if(o.clickActivated || (o.staticPos && !o.kbEventsAdded)) {\r\n                o.showCursor = false;\r\n            };\r\n\r\n            switch (el.tagName.toLowerCase()) {\r\n                case \"td\":\r\n                    if(el.className.search(/date-picker-unused|out-of-range/) != -1) {\r\n                        statusText = getTitleTranslation(9);\r\n                    } if(el.className.search(/cd-([0-9]{8})/) != -1) {\r\n                        o.showCursor = true;\r\n\r\n                        o.stopTimer();\r\n                        var cellDate = el.className.match(/cd-([0-9]{8})/)[1];\r\n\r\n                        o.removeOldFocus();\r\n                        el.id = o.id+\"-date-picker-hover\";\r\n                        o.setNewFocus();\r\n\r\n                        o.date = new Date(+cellDate.substr(0,4),+cellDate.substr(4,2)-1,+cellDate.substr(6,2), 5, 0, 0);\r\n                        if(!o.noToday) {\r\n                            o.disableTodayButton();\r\n                        };\r\n\r\n                        statusText = o.getBespokeTitle(+cellDate.substr(0,4),+cellDate.substr(4,2),+cellDate.substr(6,2)) || printFormattedDate(o.date, o.statusFormat, true);\r\n                    };\r\n                    break;\r\n                case \"th\":\r\n                    if(!o.statusBar) {\r\n                        break;\r\n                    };\r\n                    if(el.className.search(/drag-enabled/) != -1) {\r\n                        statusText = getTitleTranslation(10);\r\n                    } else if(el.className.search(/date-picker-week-header/) != -1) {\r\n                        var txt = el.firstChild ? el.firstChild.nodeValue : \"\";\r\n                        statusText = txt.search(/^(\\d+)$/) != -1 ? getTitleTranslation(7, [txt, txt < 3 && o.date.getMonth() == 11 ? getWeeksInYear(o.date.getFullYear()) + 1 : getWeeksInYear(o.date.getFullYear())]) : getTitleTranslation(9);\r\n                    };\r\n                    break;\r\n                case \"span\":\r\n                    if(!o.statusBar) {\r\n                        break;\r\n                    };\r\n\r\n                    if(el.className.search(/day-([0-6])/) != -1) {\r\n                        var day = el.className.match(/day-([0-6])/)[1];\r\n                        statusText = getTitleTranslation(11, [getDayTranslation(day, false)]);\r\n                    } else if(el.className.search(/(drag-enabled|today-but|prev-(year|month)|next-(year|month))/) != -1 && el.className.search(/disabled/) == -1) {\r\n                        statusText = getTitleTranslation({\"drag-enabled\":10,\"prev-year\":2,\"prev-month\":0,\"next-year\":3,\"next-month\":1,\"today-but\":12}[el.className.match(/(drag-enabled|today-but|prev-(year|month)|next-(year|month))/)[0]]);\r\n                    };\r\n\r\n                    break;\r\n                default:\r\n                    statusText = \"\";\r\n            };\r\n            while(el.parentNode) {\r\n                el = el.parentNode;\r\n                if(el.nodeType == 1 && el.tagName.toLowerCase() == \"tr\") {\r\n                    if(o.currentTR) {\r\n                        if(el == o.currentTR) {\r\n                            break;\r\n                        };\r\n                        o.currentTR.className = \"\";\r\n                    };\r\n                    el.className = \"dp-row-highlight\";\r\n                    o.currentTR = el;\r\n                    break;\r\n                };\r\n            };\r\n            if(o.statusBar && statusText) {\r\n                o.updateStatus(statusText);\r\n            };\r\n\r\n            if(!o.showCursor) {\r\n                o.removeCursorHighlight();\r\n            };\r\n        };\r\n        this.clearTimer = function() {\r\n            o.stopTimer();\r\n            o.timerInc      = 800;\r\n            o.yearInc       = 0;\r\n            o.monthInc      = 0;\r\n            o.dayInc        = 0;\r\n\r\n            removeEvent(document, \"mouseup\", o.clearTimer);\r\n            if(o.mouseDownElem != null) {\r\n                removeEvent(o.mouseDownElem, \"mouseout\",  o.clearTimer);\r\n            };\r\n            o.mouseDownElem = null;\r\n        };\r\n\r\n        var o = this;\r\n\r\n        this.setDateFromInput();\r\n\r\n        if(this.staticPos) {\r\n            this.create();\r\n        } else {\r\n            this.createButton();\r\n        };\r\n\r\n        (function() {\r\n            var elemID,\r\n                elem,\r\n                elemCnt = 0;\r\n\r\n            for(elemID in o.formElements) {\r\n                elem = document.getElementById(elemID);\r\n                if(elem && elem.tagName && elem.tagName.search(/select|input/i) != -1) {\r\n                    addEvent(elem, \"change\", o.changeHandler);\r\n                    if(elemCnt == 0 && elem.form) {\r\n                        addEvent(elem.form, \"reset\", o.reset);\r\n                    };\r\n                    elemCnt++;\r\n                };\r\n\r\n                if(!elem || elem.disabled == true) {\r\n                    o.disableDatePicker();\r\n                };\r\n            };\r\n        })();\r\n\r\n        // We have fully created the datepicker...\r\n        this.fullCreate = true;\r\n    };\r\n    datePicker.prototype.addButtonEvents = function(but) {\r\n        function buttonEvent (e) {\r\n            e = e || window.event;\r\n\r\n            var inpId     = this.id.replace('fd-but-',''),\r\n                dpVisible = isVisible(inpId),\r\n                autoFocus = false,\r\n                kbEvent   = datePickers[inpId].kbEvent;\r\n\r\n            if(kbEvent) {\r\n                datePickers[inpId].kbEvent = false;\r\n                return;\r\n            };\r\n\r\n            if(e.type == \"keydown\") {\r\n                var kc = e.keyCode != null ? e.keyCode : e.charCode;\r\n                if(kc != 13) return true;\r\n                datePickers[inpId].kbEvent = true;\r\n                if(dpVisible) {\r\n                    removeClass(this, \"date-picker-button-active\");\r\n                    hideAll();\r\n                    return stopEvent(e);\r\n                };\r\n                autoFocus = true;\r\n            } else {\r\n                datePickers[inpId].kbEvent = false;\r\n            };\r\n\r\n            if(!dpVisible) {\r\n                addClass(this, \"date-picker-button-active\");\r\n                hideAll(inpId);\r\n                showDatePicker(inpId, autoFocus);\r\n            } else {\r\n                removeClass(this, \"date-picker-button-active\");\r\n                hideAll();\r\n            };\r\n\r\n            return stopEvent(e);\r\n        };\r\n\r\n        but.onclick     = buttonEvent;\r\n        but.onkeydown   = buttonEvent;\r\n\r\n        if(!buttonTabIndex) {\r\n            setTabIndex(but, -1);\r\n        } else {\r\n            setTabIndex(but, this.bespokeTabIndex);\r\n        };\r\n    };\r\n\r\n    datePicker.prototype.createButton = function() {\r\n\r\n        if(this.staticPos || document.getElementById(\"fd-but-\" + this.id)) {\r\n                return;\r\n        };\r\n\r\n        var inp         = document.getElementById(this.id),\r\n            span        = document.createElement('span'),\r\n            but         = document.createElement('a');\r\n\r\n        but.href        = \"#\" + this.id;\r\n        but.className   = \"date-picker-control\";\r\n        but.title       = getTitleTranslation(5);\r\n        but.id          = \"fd-but-\" + this.id;\r\n\r\n        span.appendChild(document.createTextNode(nbsp));\r\n        but.appendChild(span);\r\n\r\n        span = document.createElement('span');\r\n        span.className = \"fd-screen-reader\";\r\n        span.appendChild(document.createTextNode(but.title));\r\n        but.appendChild(span);\r\n\r\n        // Set the ARIA role to be \"button\"\r\n        setARIARole(but, \"button\");\r\n\r\n        // Set a \"haspopup\" ARIA property\r\n        setARIAProperty(but, \"haspopup\", true);\r\n\r\n        if(this.positioned && document.getElementById(this.positioned)) {\r\n            document.getElementById(this.positioned).appendChild(but);\r\n        } else {\r\n            inp.parentNode.insertBefore(but, inp.nextSibling);\r\n        };\r\n\r\n        this.addButtonEvents(but);\r\n\r\n        but = null;\r\n\r\n        this.callback(\"dombuttoncreate\", {id:this.id});\r\n    };\r\n    datePicker.prototype.setBespokeTitles = function(titles) {\r\n        this.bespokeTitles = {};\r\n        this.addBespokeTitles(titles);\r\n    };\r\n    datePicker.prototype.addBespokeTitles = function(titles) {\r\n        for(var dt in titles) {\r\n            if(titles.hasOwnProperty(dt)) {\r\n                this.bespokeTitles[dt] = titles[dt];\r\n            };\r\n        };\r\n    };\r\n    datePicker.prototype.getBespokeTitle = function(y,m,d) {\r\n        var dt,\r\n            dtFull,\r\n            yyyymmdd = y + String(pad(m)) + pad(d);\r\n\r\n        // Try the datepickers bespoke titles\r\n        for(dt in this.bespokeTitles) {\r\n            if(this.bespokeTitles.hasOwnProperty(dt)) {\r\n                dtFull = String(dt).replace(/^(\\*\\*\\*\\*)/, y).replace(/^(\\d\\d\\d\\d)(\\*\\*)/, \"$1\"+ pad(m));\r\n                if(dtFull == yyyymmdd) {\r\n                    return this.bespokeTitles[dt];\r\n                };\r\n            };\r\n        };\r\n\r\n        // Try the generic bespoke titles\r\n        for(dt in bespokeTitles) {\r\n            if(bespokeTitles.hasOwnProperty(dt)) {\r\n                dtFull = String(dt).replace(/^(\\*\\*\\*\\*)/, y).replace(/^(\\d\\d\\d\\d)(\\*\\*)/, \"$1\"+ pad(m));\r\n                if(dtFull == yyyymmdd) {\r\n                    return bespokeTitles[dt];\r\n                };\r\n            };\r\n        };\r\n\r\n        return false;\r\n    };\r\n    datePicker.prototype.returnSelectedDate = function() {\r\n        return this.dateSet;\r\n    };\r\n    datePicker.prototype.setRangeLow = function(range) {\r\n        if(String(range).search(rangeRegExp) == -1) {\r\n            if(debug) {\r\n                throw \"Invalid value passed to setRangeLow method: \" + range;\r\n            };\r\n            return false;\r\n        };\r\n        this.rangeLow = range;\r\n        if(!this.inUpdate) {\r\n            this.setDateFromInput();\r\n        };\r\n    };\r\n    datePicker.prototype.setRangeHigh = function(range) {\r\n        if(String(range).search(rangeRegExp) == -1) {\r\n            if(debug) {\r\n                throw \"Invalid value passed to setRangeHigh method: \" + range;\r\n            };\r\n            return false;\r\n        };\r\n        this.rangeHigh = range;\r\n        if(!this.inUpdate) {\r\n            this.setDateFromInput();\r\n        };\r\n    };\r\n    datePicker.prototype.setDisabledDays = function(dayArray) {\r\n        if(!dayArray.length || dayArray.join(\"\").search(/^([0|1]{7})$/) == -1) {\r\n            if(debug) {\r\n                throw \"Invalid values located when attempting to call setDisabledDays\";\r\n            };\r\n            return false;\r\n        };\r\n        this.disabledDays = dayArray;\r\n        if(!this.inUpdate) {\r\n            this.setDateFromInput();\r\n        };\r\n    };\r\n\r\n    datePicker.prototype.setDisabledDates = function(dateObj) {\r\n        this.filterDateList(dateObj, true);\r\n    };\r\n    datePicker.prototype.setEnabledDates = function(dateObj) {\r\n        this.filterDateList(dateObj, false);\r\n    };\r\n    datePicker.prototype.addDisabledDates = function(dateObj) {\r\n        this.addDatesToList(dateObj, true);\r\n    };\r\n    datePicker.prototype.addEnabledDates = function(dateObj) {\r\n        this.addDatesToList(dateObj, false);\r\n    };\r\n    datePicker.prototype.filterDateList = function(dateObj, type) {\r\n        var tmpDates = [];\r\n        for(var i = 0; i < this.dateList.length; i++) {\r\n            if(this.dateList[i].type != type) {\r\n                tmpDates.push(this.dateList[i]);\r\n            };\r\n        };\r\n\r\n        this.dateList = tmpDates.concat();\r\n        this.addDatesToList(dateObj, type);\r\n    };\r\n    datePicker.prototype.addDatesToList = function(dateObj, areDisabled) {\r\n        var startD;\r\n        for(startD in dateObj) {\r\n            if(String(startD).search(wcDateRegExp) != -1 && (dateObj[startD] == 1 || String(dateObj[startD]).search(wcDateRegExp) != -1)) {\r\n\r\n                if(dateObj[startD] != 1 && Number(String(startD).replace(/^\\*\\*\\*\\*/, 2010).replace(/^(\\d\\d\\d\\d)(\\*\\*)/, \"$1\"+\"22\")) > Number(String(dateObj[startD]).replace(/^\\*\\*\\*\\*/, 2010).replace(/^(\\d\\d\\d\\d)(\\*\\*)/, \"$1\"+\"22\"))) {\r\n                    continue;\r\n                };\r\n\r\n                this.dateList.push({\r\n                    type:!!(areDisabled),\r\n                    rLow:startD,\r\n                    rHigh:dateObj[startD]\r\n                });\r\n            };\r\n        };\r\n\r\n        if(!this.inUpdate) {\r\n            this.setDateFromInput();\r\n        };\r\n    };\r\n    datePicker.prototype.setSelectedDate = function(yyyymmdd) {\r\n        if(String(yyyymmdd).search(wcDateRegExp) == -1) {\r\n            return false;\r\n        };\r\n\r\n        var match = yyyymmdd.match(rangeRegExp),\r\n            dt    = new Date(+match[2],+match[3]-1,+match[4], 5, 0, 0);\r\n\r\n        if(!dt || isNaN(dt) || !this.canDateBeSelected(dt)) {\r\n            return false;\r\n        };\r\n\r\n        this.dateSet = new Date(dt);\r\n\r\n        if(!this.inUpdate) {\r\n            this.updateTable();\r\n        };\r\n\r\n        this.callback(\"dateset\", this.createCbArgObj());\r\n        this.returnFormattedDate();\r\n    };\r\n    datePicker.prototype.checkSelectedDate = function() {\r\n        if(this.dateSet && !this.canDateBeSelected(this.dateSet)) {\r\n            this.dateSet = null;\r\n        };\r\n        if(!this.inUpdate) {\r\n            this.updateTable();\r\n        };\r\n    };\r\n    datePicker.prototype.addOnFocusEvents = function() {\r\n        if(this.kbEventsAdded || this.noFocus) {\r\n            return;\r\n        };\r\n\r\n        addEvent(document, \"keypress\", this.onkeydown);\r\n        addEvent(document, \"mousedown\", this.onmousedown);\r\n\r\n        if(oldIE) {\r\n            removeEvent(document, \"keypress\", this.onkeydown);\r\n            addEvent(document, \"keydown\", this.onkeydown);\r\n        };\r\n        if(window.devicePixelRatio) {\r\n            removeEvent(document, \"keypress\", this.onkeydown);\r\n            addEvent(document, \"keydown\", this.onkeydown);\r\n        };\r\n        this.noFocus = false;\r\n        this.kbEventsAdded = true;\r\n    };\r\n    datePicker.prototype.removeOnFocusEvents = function() {\r\n\r\n        if(!this.kbEventsAdded) {\r\n            return;\r\n        };\r\n\r\n        removeEvent(document, \"keypress\",  this.onkeydown);\r\n        removeEvent(document, \"keydown\",   this.onkeydown);\r\n        removeEvent(document, \"mousedown\", this.onmousedown);\r\n\r\n        this.kbEventsAdded = false;\r\n    };\r\n    datePicker.prototype.stopTimer = function() {\r\n        this.timerSet = false;\r\n        window.clearTimeout(this.timer);\r\n    };\r\n    datePicker.prototype.setOpacity = function(op) {\r\n        this.div.style.opacity = op/100;\r\n        this.div.style.filter = 'alpha(opacity=' + op + ')';\r\n        this.opacity = op;\r\n    };\r\n    datePicker.prototype.truePosition = function(element) {\r\n        var pos = this.cumulativeOffset(element);\r\n        if(isOpera) {\r\n                return pos;\r\n        };\r\n        var iebody      = (document.compatMode && document.compatMode != \"BackCompat\")? document.documentElement : document.body,\r\n            dsocleft    = document.all ? iebody.scrollLeft : window.pageXOffset,\r\n            dsoctop     = document.all ? iebody.scrollTop  : window.pageYOffset,\r\n            posReal     = this.realOffset(element);\r\n        return [pos[0] - posReal[0] + dsocleft, pos[1] - posReal[1] + dsoctop];\r\n    };\r\n    datePicker.prototype.realOffset = function(element) {\r\n        var t = 0, l = 0;\r\n        do {\r\n            t += element.scrollTop  || 0;\r\n            l += element.scrollLeft || 0;\r\n            element = element.parentNode;\r\n        } while(element);\r\n        return [l, t];\r\n    };\r\n    datePicker.prototype.cumulativeOffset = function(element) {\r\n        var t = 0, l = 0;\r\n        do {\r\n            t += element.offsetTop  || 0;\r\n            l += element.offsetLeft || 0;\r\n            element = element.offsetParent;\r\n        } while(element);\r\n        return [l, t];\r\n    };\r\n    datePicker.prototype.outOfRange = function(tmpDate) {\r\n\r\n        if(!this.rangeLow && !this.rangeHigh) {\r\n            return false;\r\n        };\r\n\r\n        var level = false;\r\n\r\n        if(!tmpDate) {\r\n            level   = true;\r\n            tmpDate = this.date;\r\n        };\r\n\r\n        var d  = pad(tmpDate.getDate()),\r\n            m  = pad(tmpDate.getMonth() + 1),\r\n            y  = tmpDate.getFullYear(),\r\n            dt = String(y)+String(m)+String(d);\r\n\r\n        if(this.rangeLow && +dt < +this.rangeLow) {\r\n            if(!level) {\r\n                return true;\r\n            };\r\n            this.date = new Date(this.rangeLow.substr(0,4), this.rangeLow.substr(4,2)-1, this.rangeLow.substr(6,2), 5, 0, 0);\r\n            return false;\r\n        };\r\n        if(this.rangeHigh && +dt > +this.rangeHigh) {\r\n            if(!level) {\r\n                return true;\r\n            };\r\n            this.date = new Date(this.rangeHigh.substr(0,4), this.rangeHigh.substr(4,2)-1, this.rangeHigh.substr(6,2), 5, 0, 0);\r\n        };\r\n        return false;\r\n    };\r\n    datePicker.prototype.canDateBeSelected = function(tmpDate) {\r\n        if(!tmpDate || isNaN(tmpDate)) {\r\n            return false;\r\n        };\r\n\r\n        var d  = pad(tmpDate.getDate()),\r\n            m  = pad(tmpDate.getMonth() + 1),\r\n            y  = tmpDate.getFullYear(),\r\n            dt = y + \"\" + m + \"\" + d,\r\n            dd = this.getDateExceptions(y, m),\r\n            wd = tmpDate.getDay() == 0 ? 7 : tmpDate.getDay();\r\n\r\n        // If date out of range\r\n        if((this.rangeLow && +dt < +this.rangeLow)\r\n           ||\r\n           (this.rangeHigh && +dt > +this.rangeHigh)\r\n           ||\r\n           // or the date has been explicitly disabled\r\n           ((dt in dd) && dd[dt] == 1)\r\n           ||\r\n           // or the date lies on a disabled weekday and it hasn't been explicitly enabled\r\n           (this.disabledDays[wd-1] && (!(dt in dd) || ((dt in dd) && dd[dt] == 1)))) {\r\n                return false;\r\n        };\r\n\r\n        return true;\r\n    };\r\n    datePicker.prototype.updateStatus = function(msg) {\r\n        removeChildNodes(this.statusBar);\r\n\r\n        // All this arseing about just for sups in the footer... nice typography and all that...\r\n        if(msg && this.statusFormat.search(/%S/) != -1 && msg.search(/([0-9]{1,2})(st|nd|rd|th)/) != -1) {\r\n            msg = cbSplit(msg.replace(/([0-9]{1,2})(st|nd|rd|th)/, \"$1<sup>$2</sup>\"), /<sup>|<\\/sup>/);\r\n            var dc = document.createDocumentFragment();\r\n            for(var i = 0, nd; nd = msg[i]; i++) {\r\n                if(/^(st|nd|rd|th)$/.test(nd)) {\r\n                    var sup = document.createElement(\"sup\");\r\n                    sup.appendChild(document.createTextNode(nd));\r\n                    dc.appendChild(sup);\r\n                } else {\r\n                    dc.appendChild(document.createTextNode(nd));\r\n                };\r\n            };\r\n            this.statusBar.appendChild(dc);\r\n        } else {\r\n            this.statusBar.appendChild(document.createTextNode(msg ? msg : getTitleTranslation(9)));\r\n        };\r\n    };\r\n\r\n    /* Still needs work... */\r\n    datePicker.prototype.setDateFromInput = function() {\r\n        var origDateSet = this.dateSet,\r\n            m           = false,\r\n            but         = this.staticPos ? false : document.getElementById(\"fd-but-\" + this.id),\r\n            e           = localeImport.imported ? [].concat(localeDefaults.fullMonths).concat(localeDefaults.monthAbbrs) : [],\r\n            l           = localeImport.imported ? [].concat(localeImport.fullMonths).concat(localeImport.monthAbbrs) : [],\r\n            eosRegExp   = /(3[01]|[12][0-9]|0?[1-9])(st|nd|rd|th)/i,\r\n            elemCnt     = 0,\r\n            dt          = false,\r\n            allFormats, i, elemID, elem, elemFmt, d, y, elemVal, dp, mp, yp;\r\n\r\n        // Reset the internal dateSet variable\r\n        this.dateSet = null;\r\n\r\n        // Try and get a year, month and day from the form element values\r\n        for(elemID in this.formElements) {\r\n\r\n            elem = document.getElementById(elemID);\r\n\r\n            if(!elem) {\r\n                return false;\r\n            };\r\n\r\n            elemCnt++;\r\n\r\n            elemVal = String(elem.value);\r\n\r\n            if(!elemVal) {\r\n                continue;\r\n            };\r\n\r\n            elemFmt     = this.formElements[elemID];\r\n            allFormats  = [elemFmt];\r\n            dt          = false;\r\n            dp          = elemFmt.search(dPartsRegExp) != -1;\r\n            mp          = elemFmt.search(mPartsRegExp) != -1;\r\n            yp          = elemFmt.search(yPartsRegExp) != -1;\r\n\r\n            // Try to assign some default date formats to throw at\r\n            // the (simple) regExp parser for single date parts.\r\n            if(!(dp && mp && yp)) {\r\n                if(yp && !(mp || dp)) {\r\n                    allFormats = allFormats.concat([\r\n                        \"%Y\",\r\n                        \"%y\"\r\n                        ]);\r\n                } else if(mp && !(yp || dp)) {\r\n                    allFormats = allFormats.concat([\r\n                        \"%M\",\r\n                        \"%F\",\r\n                        \"%m\",\r\n                        \"%n\"\r\n                        ]);\r\n                } else if(dp && !(yp || mp)) {\r\n                    allFormats = allFormats.concat([\r\n                        \"%d%\",\r\n                        \"%j\"\r\n                        ]);\r\n                };\r\n            };\r\n\r\n            for(i = 0; i < allFormats.length; i++) {\r\n                dt = parseDateString(elemVal, allFormats[i]);\r\n\r\n                if(dt) {\r\n                    if(!d && dp && dt.d) {\r\n                        d = dt.d;\r\n                    };\r\n                    if(m === false && mp && dt.m) {\r\n                        m = dt.m;\r\n                    };\r\n                    if(!y && yp && dt.y) {\r\n                        y = dt.y;\r\n                    };\r\n                };\r\n\r\n                if(((dp && d) || !dp)\r\n                   &&\r\n                   ((mp && !m === false) || !mp)\r\n                   &&\r\n                   ((yp && y) || !yp)) {\r\n                    break;\r\n                };\r\n            };\r\n        };\r\n\r\n        // Last ditch attempt at date parsing for single inputs that\r\n        // represent the day, month and year parts of the date format.\r\n        // I'm - thankfully - passing this responsibility off to the browser.\r\n        // Date parsing in js sucks but the browsers' in-built Date.parse method\r\n        // will inevitably be better than anything I would hazard to write.\r\n        // Date.parse is implementation dependant though so don't expect\r\n        // consistency, rhyme or reason.\r\n        if(dateParseFallback && (!d || m === false || !y) && dp && mp && yp && elemCnt == 1 && elemVal) {\r\n            // If locale imported then replace month names with English\r\n            // counterparts if necessary\r\n            if(localeImport.imported) {\r\n                for(i = 0; i < l.length; i++) {\r\n                    elemVal = elemVal.replace(new RegExp(l[i], \"i\"), e[i]);\r\n                };\r\n            };\r\n\r\n            // Remove English ordinal suffix\r\n            if(elemVal.search(eosRegExp) != -1) {\r\n                elemVal = elemVal.replace(eosRegExp, elemVal.match(eosRegExp)[1]);\r\n            };\r\n\r\n            // Older browsers have problems with dashes so we replace with\r\n            // slashes which appear to be supported by all and then try to use\r\n            // the in-built Date Object to parse a valid date\r\n            dt = new Date(elemVal.replace(new RegExp(\"\\-\", \"g\"), \"/\"));\r\n\r\n            if(dt && !isNaN(dt)) {\r\n                d = dt.getDate();\r\n                m = dt.getMonth() + 1;\r\n                y = dt.getFullYear();\r\n            };\r\n        };\r\n\r\n        dt = false;\r\n\r\n        if(d && !(m === false) && y) {\r\n            if(+d > daysInMonth(+m - 1, +y)) {\r\n                d  = daysInMonth(+m - 1, +y);\r\n                dt = false;\r\n            } else {\r\n                dt = new Date(+y, +m - 1, +d, 5, 0, 0);\r\n            };\r\n        };\r\n\r\n        if(but) {\r\n            removeClass(but, \"date-picker-dateval\");\r\n        };\r\n\r\n        if(!dt || isNaN(dt)) {\r\n            var newDate = new Date(y || new Date().getFullYear(), !(m === false) ? m - 1 : new Date().getMonth(), 1, 5, 0, 0);\r\n            this.date = this.cursorDate ? new Date(+this.cursorDate.substr(0,4), +this.cursorDate.substr(4,2) - 1, +this.cursorDate.substr(6,2), 5, 0, 0) : new Date(newDate.getFullYear(), newDate.getMonth(), Math.min(+d || new Date().getDate(), daysInMonth(newDate.getMonth(), newDate.getFullYear())), 5, 0, 0);\r\n\r\n            this.outOfRange();\r\n            if(this.fullCreate) {\r\n                this.updateTable();\r\n            };\r\n            return;\r\n        };\r\n\r\n        dt.setHours(5);\r\n        this.date = new Date(dt);\r\n        this.outOfRange();\r\n\r\n        if(dt.getTime() == this.date.getTime() && this.canDateBeSelected(this.date)) {\r\n            this.dateSet = new Date(this.date);\r\n            if(but) {\r\n                addClass(but, \"date-picker-dateval\");\r\n            };\r\n            this.returnFormattedDate(true);\r\n        };\r\n\r\n        if(this.fullCreate) {\r\n            this.updateTable();\r\n        };\r\n    };\r\n    datePicker.prototype.setSelectIndex = function(elem, indx) {\r\n        for(var opt = elem.options.length-1; opt >= 0; opt--) {\r\n            if(elem.options[opt].value == indx) {\r\n                elem.selectedIndex = opt;\r\n                return;\r\n            };\r\n        };\r\n    };\r\n    datePicker.prototype.returnFormattedDate = function(noFocus) {\r\n        var but = this.staticPos ? false : document.getElementById(\"fd-but-\" + this.id);\r\n\r\n        if(!this.dateSet) {\r\n            if(but) {\r\n                removeClass(but, \"date-picker-dateval\");\r\n            };\r\n            return;\r\n        };\r\n\r\n        var d   = pad(this.dateSet.getDate()),\r\n            m   = pad(this.dateSet.getMonth() + 1),\r\n            y   = this.dateSet.getFullYear(),\r\n            el  = false,\r\n            elemID, elem, elemFmt, fmtDate;\r\n\r\n        noFocus = !!noFocus;\r\n\r\n        for(elemID in this.formElements) {\r\n            elem    = document.getElementById(elemID);\r\n\r\n            if(!elem) {\r\n                return;\r\n            };\r\n\r\n            if(!el) {\r\n                el = elem;\r\n            };\r\n\r\n            elemFmt = this.formElements[elemID];\r\n\r\n            fmtDate = printFormattedDate(this.dateSet, elemFmt, returnLocaleDate);\r\n            if(elem.tagName.toLowerCase() == \"input\") {\r\n                elem.value = fmtDate;\r\n            } else {\r\n                this.setSelectIndex(elem, fmtDate);\r\n            };\r\n        };\r\n\r\n        if(this.staticPos) {\r\n            this.noFocus = true;\r\n            this.updateTable();\r\n            this.noFocus = false;\r\n        } else if(but) {\r\n            addClass(but, \"date-picker-dateval\");\r\n        };\r\n\r\n        if(this.fullCreate) {\r\n            if(el.type && el.type != \"hidden\" && !noFocus) {\r\n                try{\r\n                    el.focus();\r\n                } catch(err) {};\r\n            };\r\n        };\r\n\r\n        if(!noFocus) {\r\n            this.callback(\"datereturned\", this.createCbArgObj());\r\n        };\r\n    };\r\n    datePicker.prototype.disableDatePicker = function() {\r\n        if(this.disabled) {\r\n            return;\r\n        };\r\n\r\n        if(this.staticPos) {\r\n            this.removeOnFocusEvents();\r\n            this.removeOldFocus();\r\n            this.noFocus = true;\r\n            addClass(this.div, \"date-picker-disabled\");\r\n            this.table.onmouseover = this.table.onclick = this.table.onmouseout = this.table.onmousedown = null;\r\n            removeEvent(document, \"mousedown\", this.onmousedown);\r\n            removeEvent(document, \"mouseup\",   this.clearTimer);\r\n        } else {\r\n            if(this.visible) {\r\n                this.hide();\r\n            };\r\n            var but = document.getElementById(\"fd-but-\" + this.id);\r\n            if(but) {\r\n                addClass(but, \"date-picker-control-disabled\");\r\n                // Set a \"disabled\" ARIA state\r\n                setARIAProperty(but, \"disabled\", true);\r\n                but.onkeydown = but.onclick = function() {\r\n                    return false;\r\n                };\r\n                setTabIndex(but, -1);\r\n                but.title = \"\";\r\n            }\r\n        };\r\n\r\n        clearTimeout(this.timer);\r\n        this.disabled = true;\r\n    };\r\n    datePicker.prototype.enableDatePicker = function() {\r\n        if(!this.disabled) {\r\n            return;\r\n        };\r\n\r\n        if(this.staticPos) {\r\n            this.removeOldFocus();\r\n\r\n            if(this.dateSet != null) {\r\n                this.date = this.dateSet;\r\n            };\r\n            this.noFocus = true;\r\n            this.updateTable();\r\n            removeClass(this.div, \"date-picker-disabled\");\r\n            this.disabled = false;\r\n            this.table.onmouseover = this.onmouseover;\r\n            this.table.onmouseout  = this.onmouseout;\r\n            this.table.onclick     = this.onclick;\r\n            this.table.onmousedown = this.onmousedown;\r\n        } else {\r\n            var but = document.getElementById(\"fd-but-\" + this.id);\r\n            if(but) {\r\n                removeClass(but, \"date-picker-control-disabled\");\r\n                // Reset the \"disabled\" ARIA state\r\n                setARIAProperty(but, \"disabled\", false);\r\n                this.addButtonEvents(but);\r\n                but.title = getTitleTranslation(5);\r\n            };\r\n        };\r\n\r\n        this.disabled = false;\r\n    };\r\n    datePicker.prototype.disableTodayButton = function() {\r\n        var today = new Date();\r\n        removeClass(this.butToday, \"fd-disabled\");\r\n        if(this.outOfRange(today)\r\n           ||\r\n           (this.date.getDate() == today.getDate()\r\n            &&\r\n            this.date.getMonth() == today.getMonth()\r\n            &&\r\n            this.date.getFullYear() == today.getFullYear())\r\n            ) {\r\n            addClass(this.butToday, \"fd-disabled\");\r\n        };\r\n    };\r\n    datePicker.prototype.updateTableHeaders = function() {\r\n        var colspanTotal = this.showWeeks ? 8 : 7,\r\n            colOffset    = this.showWeeks ? 1 : 0,\r\n            d, but;\r\n\r\n        for(var col = colOffset; col < colspanTotal; col++ ) {\r\n            d = (this.firstDayOfWeek + (col - colOffset)) % 7;\r\n            this.ths[col].title = getDayTranslation(d, false);\r\n\r\n            if(col > colOffset) {\r\n                but = this.ths[col].getElementsByTagName(\"span\")[0];\r\n                removeChildNodes(but);\r\n\r\n                but.appendChild(document.createTextNode(getDayTranslation(d, true)));\r\n                but.title = this.ths[col].title;\r\n                but = null;\r\n            } else {\r\n                removeChildNodes(this.ths[col]);\r\n                this.ths[col].appendChild(document.createTextNode(getDayTranslation(d, true)));\r\n            };\r\n\r\n            removeClass(this.ths[col], \"date-picker-highlight\");\r\n            if(this.highlightDays[d]) {\r\n                addClass(this.ths[col], \"date-picker-highlight\");\r\n            };\r\n        };\r\n\r\n        if(this.created) {\r\n            this.updateTable();\r\n        };\r\n    };\r\n    datePicker.prototype.callback = function(type, args) {\r\n        if(!type || !(type in this.callbacks)) {\r\n            return false;\r\n        };\r\n\r\n        var ret = false,\r\n            func;\r\n\r\n        for(func = 0; func < this.callbacks[type].length; func++) {\r\n            ret = this.callbacks[type][func](args || this.id);\r\n        };\r\n\r\n        return ret;\r\n    };\r\n    datePicker.prototype.showHideButtons = function(tmpDate) {\r\n        if(!this.butPrevYear) {\r\n            return;\r\n        };\r\n\r\n        var tdm = tmpDate.getMonth(),\r\n            tdy = tmpDate.getFullYear();\r\n\r\n        if(this.outOfRange(new Date((tdy - 1), tdm, daysInMonth(+tdm, tdy-1), 5, 0, 0))) {\r\n            addClass(this.butPrevYear, \"fd-disabled\");\r\n            if(this.yearInc == -1) {\r\n                this.stopTimer();\r\n            };\r\n        } else {\r\n            removeClass(this.butPrevYear, \"fd-disabled\");\r\n        };\r\n\r\n        if(this.outOfRange(new Date(tdy, (+tdm - 1), daysInMonth(+tdm-1, tdy), 5, 0, 0))) {\r\n            addClass(this.butPrevMonth, \"fd-disabled\");\r\n            if(this.monthInc == -1) {\r\n                this.stopTimer();\r\n            };\r\n        } else {\r\n            removeClass(this.butPrevMonth, \"fd-disabled\");\r\n        };\r\n\r\n        if(this.outOfRange(new Date((tdy + 1), +tdm, 1, 5, 0, 0))) {\r\n            addClass(this.butNextYear, \"fd-disabled\");\r\n            if(this.yearInc == 1) {\r\n                this.stopTimer();\r\n            };\r\n        } else {\r\n            removeClass(this.butNextYear, \"fd-disabled\");\r\n        };\r\n\r\n        if(this.outOfRange(new Date(tdy, +tdm + 1, 1, 5, 0, 0))) {\r\n            addClass(this.butNextMonth, \"fd-disabled\");\r\n            if(this.monthInc == 1) {\r\n                this.stopTimer();\r\n            };\r\n        } else {\r\n            removeClass(this.butNextMonth, \"fd-disabled\");\r\n        };\r\n    };\r\n    var localeDefaults = {\r\n        fullMonths:[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],\r\n        monthAbbrs:[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],\r\n        fullDays:  [\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\",\"Sunday\"],\r\n        dayAbbrs:  [\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\",\"Sun\"],\r\n        titles:    [\"Previous month\",\"Next month\",\"Previous year\",\"Next year\", \"Today\", \"Show Calendar\", \"wk\", \"Week [[%0%]] of [[%1%]]\", \"Week\", \"Select a date\", \"Click \\u0026 Drag to move\", \"Display \\u201C[[%0%]]\\u201D first\", \"Go to Today\\u2019s date\", \"Disabled date :\"],\r\n        rtl:       false,\r\n        firstDayOfWeek:0,\r\n        imported:  false\r\n    };\r\n    var joinNodeLists = function() {\r\n        if(!arguments.length) {\r\n            return [];\r\n        };\r\n        var nodeList = [];\r\n        for (var i = 0; i < arguments.length; i++) {\r\n            for (var j = 0, item; item = arguments[i][j]; j++) {\r\n                nodeList[nodeList.length] = item;\r\n            };\r\n        };\r\n        return nodeList;\r\n    };\r\n    var cleanUp = function() {\r\n        var dp, fe;\r\n        for(dp in datePickers) {\r\n            for(fe in datePickers[dp].formElements) {\r\n                if(!document.getElementById(fe)) {\r\n                    datePickers[dp].destroy();\r\n                    datePickers[dp] = null;\r\n                    delete datePickers[dp];\r\n                    break;\r\n                };\r\n            };\r\n        };\r\n    };\r\n    var hideAll = function(exception) {\r\n        var dp;\r\n        for(dp in datePickers) {\r\n            if(!datePickers[dp].created || (exception && exception == datePickers[dp].id)) {\r\n                continue;\r\n            };\r\n            datePickers[dp].hide();\r\n        };\r\n    };\r\n    var hideDatePicker = function(inpID) {\r\n        if(inpID in datePickers) {\r\n            if(!datePickers[inpID].created || datePickers[inpID].staticPos) {\r\n                return;\r\n            };\r\n            datePickers[inpID].hide();\r\n        };\r\n    };\r\n    var showDatePicker = function(inpID, autoFocus) {\r\n        if(!(inpID in datePickers)) {\r\n            return false;\r\n        };\r\n\r\n        datePickers[inpID].clickActivated = !!!autoFocus;\r\n        datePickers[inpID].show(autoFocus);\r\n        return true;\r\n    };\r\n    var destroy = function(e) {\r\n        e = e || window.event;\r\n\r\n        // Don't remove datepickers if it's a pagehide/pagecache event (webkit et al)\r\n        if(e.persisted) {\r\n            return;\r\n        };\r\n\r\n        var dp;\r\n        for(dp in datePickers) {\r\n            datePickers[dp].destroy();\r\n            datePickers[dp] = null;\r\n            delete datePickers[dp];\r\n        };\r\n        datePickers = null;\r\n\r\n        removeEvent(window, 'unload', destroy);\r\n    };\r\n    var destroySingleDatePicker = function(id) {\r\n        if(id && (id in datePickers)) {\r\n            datePickers[id].destroy();\r\n            datePickers[id] = null;\r\n            delete datePickers[id];\r\n        };\r\n    };\r\n    var getTitleTranslation = function(num, replacements) {\r\n        replacements = replacements || [];\r\n        if(localeImport.titles.length > num) {\r\n             var txt = localeImport.titles[num];\r\n             if(replacements && replacements.length) {\r\n                for(var i = 0; i < replacements.length; i++) {\r\n                    txt = txt.replace(\"[[%\" + i + \"%]]\", replacements[i]);\r\n                };\r\n             };\r\n             return txt.replace(/[[%(\\d)%]]/g,\"\");\r\n        };\r\n        return \"\";\r\n    };\r\n    var getDayTranslation = function(day, abbreviation) {\r\n        var titles = localeImport[abbreviation ? \"dayAbbrs\" : \"fullDays\"];\r\n        return titles.length && titles.length > day ? titles[day] : \"\";\r\n    };\r\n    var getMonthTranslation = function(month, abbreviation) {\r\n        var titles = localeImport[abbreviation ? \"monthAbbrs\" : \"fullMonths\"];\r\n        return titles.length && titles.length > month ? titles[month] : \"\";\r\n    };\r\n    var daysInMonth = function(nMonth, nYear) {\r\n        nMonth = (nMonth + 12) % 12;\r\n        return (((0 == (nYear%4)) && ((0 != (nYear%100)) || (0 == (nYear%400)))) && nMonth == 1) ? 29: [31,28,31,30,31,30,31,31,30,31,30,31][nMonth];\r\n    };\r\n    var getWeeksInYear = function(Y) {\r\n        if(Y in weeksInYearCache) {\r\n            return weeksInYearCache[Y];\r\n        };\r\n\r\n        var X1 = new Date(Y, 0, 4),\r\n            X2 = new Date(Y, 11, 28);\r\n\r\n        X1.setDate(X1.getDate() - (6 + X1.getDay()) % 7);\r\n        X2.setDate(X2.getDate() + (7 - X2.getDay()) % 7);\r\n\r\n        weeksInYearCache[Y] = Math.round((X2 - X1) / 604800000);\r\n\r\n        return weeksInYearCache[Y];\r\n    };\r\n\r\n    var getWeekNumber = function(y,m,d) {\r\n        var d   = new Date(y, m, d, 0, 0, 0),\r\n            DoW = d.getDay(),\r\n            ms;\r\n\r\n        d.setDate(d.getDate() - (DoW + 6) % 7 + 3);\r\n        ms = d.valueOf();\r\n        d.setMonth(0);\r\n        d.setDate(4);\r\n        return Math.round((ms - d.valueOf()) / (7 * 864e5)) + 1;\r\n    };\r\n\r\n    var printFormattedDate = function(date, fmt, useImportedLocale) {\r\n        if(!date || isNaN(date)) {\r\n            return fmt;\r\n        };\r\n\r\n        var d           = date.getDate(),\r\n            D           = date.getDay(),\r\n            m           = date.getMonth(),\r\n            y           = date.getFullYear(),\r\n            locale      = useImportedLocale ? localeImport : localeDefaults,\r\n            fmtParts    = String(fmt).split(formatSplitRegExp),\r\n            fmtParts    = cbSplit(fmt, formatSplitRegExp),\r\n            fmtNewParts = [],\r\n            flags       = {\r\n                        \"d\":pad(d),\r\n                        \"D\":locale.dayAbbrs[D == 0 ? 6 : D - 1],\r\n                        \"l\":locale.fullDays[D == 0 ? 6 : D - 1],\r\n                        \"j\":d,\r\n                        \"N\":D == 0 ? 7 : D,\r\n                        \"w\":D,\r\n                        \"W\":getWeekNumber(y,m,d),\r\n                        \"M\":locale.monthAbbrs[m],\r\n                        \"F\":locale.fullMonths[m],\r\n                        \"m\":pad(m + 1),\r\n                        \"n\":m + 1,\r\n                        \"t\":daysInMonth(m, y),\r\n                        \"y\":String(y).substr(2,2),\r\n                        \"Y\":y,\r\n                        \"S\":[\"th\", \"st\", \"nd\", \"rd\"][d % 10 > 3 ? 0 : (d % 100 - d % 10 != 10) * d % 10]\r\n                        },\r\n            len         = fmtParts.length,\r\n            currFlag, f;\r\n\r\n        for(f = 0; f < len; f++) {\r\n            currFlag = fmtParts[f];\r\n            fmtNewParts.push(currFlag in flags ? flags[currFlag] : currFlag);\r\n        };\r\n\r\n        return fmtNewParts.join(\"\");\r\n    };\r\n    var parseDateString = function(str, fmt) {\r\n        var d     = false,\r\n            m     = false,\r\n            y     = false,\r\n            dp    = fmt.search(dPartsRegExp) != -1 ? 1 : 0,\r\n            mp    = fmt.search(mPartsRegExp) != -1 ? 1 : 0,\r\n            yp    = fmt.search(yPartsRegExp) != -1 ? 1 : 0,\r\n            now   = new Date(),\r\n            parts = cbSplit(fmt, formatSplitRegExp),\r\n            str   = \"\" + str,\r\n            len   = parts.length,\r\n            pt, part, l;\r\n\r\n        loopLabel:\r\n        for(pt = 0; pt < len; pt++) {\r\n            part = parts[pt];\r\n\r\n            if(part === \"\") {\r\n                continue loopLabel;\r\n            };\r\n\r\n            if(str.length == 0) {\r\n                break;\r\n            };\r\n\r\n            switch(part) {\r\n                // Dividers - be easy on them all i.e. accept them all when parsing...\r\n                case \"/\":\r\n                case \".\":\r\n                case \" \":\r\n                case \"-\":\r\n                case \",\":\r\n                case \":\":\r\n                    str = str.substr(1);\r\n                    break;\r\n                // DAY\r\n                case \"d\":\r\n                    // Day of the month, 2 digits with leading zeros (01 - 31)\r\n                    if(str.search(/^(3[01]|[12][0-9]|0[1-9])/) != -1) {\r\n                        d = str.substr(0,2);\r\n                        str = str.substr(2);\r\n                        break;\r\n                    } else {\r\n                        return false;\r\n                    };\r\n                case \"j\": // Day of the month without leading zeros (1 - 31)\r\n                    if(str.search(/^(3[01]|[12][0-9]|[1-9])/) != -1) {\r\n                        d = +str.match(/^(3[01]|[12][0-9]|[1-9])/)[0];\r\n                        str = str.substr(str.match(/^(3[01]|[12][0-9]|[1-9])/)[0].length);\r\n                        break;\r\n                    } else {\r\n                        return false;\r\n                    };\r\n                case \"D\": // A textual representation of a day, three letters (Mon - Sun)\r\n                case \"l\": // A full textual representation of the day of the week (Monday - Sunday)\r\n                          // Accept English & imported locales and both modifiers\r\n                    l = localeDefaults.fullDays.concat(localeDefaults.dayAbbrs);\r\n                    if(localeImport.imported) {\r\n                        l = l.concat(localeImport.fullDays).concat(localeImport.dayAbbrs);\r\n                    };\r\n\r\n                    for(var i = 0; i < l.length; i++) {\r\n                        if(new RegExp(\"^\" + l[i], \"i\").test(str)) {\r\n                            str = str.substr(l[i].length);\r\n                            continue loopLabel;\r\n                        };\r\n                    };\r\n\r\n                    break;\r\n                case \"N\": // ISO-8601 numeric representation of the day of the week (added in PHP 5.1.0) 1 (for Monday) through 7 (for Sunday)\r\n                case \"w\": // Numeric representation of the day of the week 0 (for Sunday) through 6 (for Saturday)\r\n                    if(str.search(part == \"N\" ? /^([1-7])/ : /^([0-6])/) != -1) {\r\n                        str = str.substr(1);\r\n                    };\r\n                    break;\r\n                case \"S\": // English ordinal suffix for the day of the month, 2 characters: st, nd, rd or th\r\n                    if(str.search(/^(st|nd|rd|th)/i) != -1) {\r\n                        str = str.substr(2);\r\n                    };\r\n                    break;\r\n                // WEEK\r\n                case \"W\": // ISO-8601 week number of year, weeks starting on Monday (added in PHP 4.1.0): 1 - 53\r\n                    if(str.search(/^([1-9]|[1234[0-9]|5[0-3])/) != -1) {\r\n                        str = str.substr(str.match(/^([1-9]|[1234[0-9]|5[0-3])/)[0].length);\r\n                    };\r\n                    break;\r\n                // MONTH\r\n                case \"M\": // A short textual representation of a month, three letters\r\n                case \"F\": // A full textual representation of a month, such as January or March\r\n                          // Accept English & imported locales and both modifiers\r\n                    l = localeDefaults.fullMonths.concat(localeDefaults.monthAbbrs);\r\n                    if(localeImport.imported) {\r\n                        l = l.concat(localeImport.fullMonths).concat(localeImport.monthAbbrs);\r\n                    };\r\n                    for(var i = 0; i < l.length; i++) {\r\n                        if(str.search(new RegExp(\"^\" + l[i],\"i\")) != -1) {\r\n                            str = str.substr(l[i].length);\r\n                            m = ((i + 12) % 12) + 1;\r\n                            continue loopLabel;\r\n                        };\r\n                    };\r\n                    return false;\r\n                case \"m\": // Numeric representation of a month, with leading zeros\r\n                    l = /^(1[012]|0[1-9])/;\r\n                    if(str.search(l) != -1) {\r\n                        m = +str.substr(0, 2);\r\n                        str = str.substr(2);\r\n                        break;\r\n                    } else {\r\n                        return false;\r\n                    };\r\n                case \"n\": // Numeric representation of a month, without leading zeros\r\n                          // Accept either when parsing\r\n                    l = /^(1[012]|[1-9])/;\r\n                    if(str.search(l) != -1) {\r\n                        m = +str.match(l)[0];\r\n                        str = str.substr(str.match(l)[0].length);\r\n                        break;\r\n                    } else {\r\n                        return false;\r\n                    };\r\n                case \"t\": // Number of days in the given month: 28 through 31\r\n                    if(str.search(/2[89]|3[01]/) != -1) {\r\n                        str = str.substr(2);\r\n                        break;\r\n                    } else {\r\n                        return false;\r\n                    };\r\n                // YEAR\r\n\r\n                case \"Y\": // A full numeric representation of a year, 4 digits\r\n                    if(str.search(/^(\\d{4})/) != -1) {\r\n                        y = str.substr(0,4);\r\n                        str = str.substr(4);\r\n                        break;\r\n                    } else {\r\n                        return false;\r\n                    };\r\n                case \"y\": // A two digit representation of a year\r\n                    if(str.search(/^(0[0-9]|[1-9][0-9])/) != -1) {\r\n                        y = str.substr(0,2);\r\n                        y = +y < 50 ? '20' + String(y) : '19' + String(y);\r\n                        str = str.substr(2);\r\n                        break;\r\n                    } else {\r\n                        return false;\r\n                    };\r\n                default:\r\n                   str = str.substr(part.length);\r\n            };\r\n        };\r\n\r\n        if((dp && d === false) || (mp && m === false) || (yp && y === false)) {\r\n            return false;\r\n        };\r\n\r\n        if(dp && mp && yp && +d > daysInMonth(+m - 1, +y)) {\r\n            return false;\r\n        };\r\n\r\n        return {\r\n            \"d\":dp ? +d : false,\r\n            \"m\":mp ? +m : false,\r\n            \"y\":yp ? +y : false\r\n            };\r\n    };\r\n\r\n    var findLabelForElement = function(element) {\r\n        var label;\r\n        if(element.parentNode && element.parentNode.tagName.toLowerCase() == \"label\") {\r\n            label = element.parentNode;\r\n        } else {\r\n            var labelList = document.getElementsByTagName('label');\r\n            // loop through label array attempting to match each 'for' attribute to the id of the current element\r\n            for(var lbl = 0; lbl < labelList.length; lbl++) {\r\n                // Internet Explorer requires the htmlFor test\r\n                if((labelList[lbl]['htmlFor'] && labelList[lbl]['htmlFor'] == element.id) || (labelList[lbl].getAttribute('for') == element.id)) {\r\n                    label = labelList[lbl];\r\n                    break;\r\n                };\r\n            };\r\n        };\r\n\r\n        if(label && !label.id && element.id) {\r\n            label.id = element.id + \"_label\";\r\n        };\r\n\r\n        return label;\r\n    };\r\n    var updateLanguage = function() {\r\n        if(typeof(window.fdLocale) == \"object\" ) {\r\n            localeImport = {\r\n                titles          : fdLocale.titles,\r\n                fullMonths      : fdLocale.fullMonths,\r\n                monthAbbrs      : fdLocale.monthAbbrs,\r\n                fullDays        : fdLocale.fullDays,\r\n                dayAbbrs        : fdLocale.dayAbbrs,\r\n                firstDayOfWeek  : (\"firstDayOfWeek\" in fdLocale) ? fdLocale.firstDayOfWeek : 0,\r\n                rtl             : (\"rtl\" in fdLocale) ? !!(fdLocale.rtl) : false,\r\n                imported        : true\r\n            };\r\n        } else if(!localeImport) {\r\n            localeImport = localeDefaults;\r\n        };\r\n    };\r\n    var loadLanguage = function() {\r\n        updateLanguage();\r\n        var dp;\r\n        for(dp in datePickers) {\r\n            if(!datePickers[dp].created) {\r\n                continue;\r\n            };\r\n            datePickers[dp].updateTable();\r\n        };\r\n    };\r\n    var checkElem = function(elem) {\r\n        return !(!elem || !elem.tagName || !((elem.tagName.toLowerCase() == \"input\" && (elem.type == \"text\" || elem.type == \"hidden\")) || elem.tagName.toLowerCase() == \"select\"));\r\n    };\r\n    var addDatePicker = function(options) {\r\n        updateLanguage();\r\n\r\n        if(cssAnimations === null) {\r\n            cssAnimations = testCSSAnimationSupport();\r\n        };\r\n\r\n        if(!options.formElements) {\r\n            if(debug) {\r\n                throw \"No form elements stipulated within initialisation parameters\";\r\n            };\r\n            return;\r\n        };\r\n\r\n        options.id            = (options.id && (options.id in options.formElements)) ? options.id : \"\";\r\n        options.enabledDates  = false;\r\n        options.disabledDates = false;\r\n\r\n        var partsFound  = {d:0,m:0,y:0},\r\n            defaultVals = {},\r\n            cursorDate  = false,\r\n            myMin       = 0,\r\n            myMax       = 0,\r\n            fmt, opts, dtPartStr, elemID, elem, dt, i;\r\n\r\n        for(elemID in options.formElements) {\r\n            elem = document.getElementById(elemID);\r\n\r\n            if(!checkElem(elem)) {\r\n                if(debug) {\r\n                    throw \"Element '\" + elemID + \"' is of the wrong type or does not exist within the DOM\";\r\n                };\r\n                return false;\r\n            };\r\n\r\n            if(!(options.formElements[elemID].match(formatTestRegExp))) {\r\n                if(debug) {\r\n                    throw \"Element '\" + elemID + \"' has a date format that does not contain either a day (d|j), month (m|F|n) or year (y|Y) part: \" + options.formElements[elemID];\r\n                };\r\n                return false;\r\n            };\r\n\r\n            if(!options.id) {\r\n                options.id = elemID;\r\n            };\r\n\r\n            defaultVals[elemID] = elem.tagName == \"select\" ? elem.selectedIndex || 0 : elem.defaultValue;\r\n\r\n            fmt             = {\r\n                \"value\":options.formElements[elemID]\r\n            };\r\n\r\n            fmt.d = fmt.value.search(dPartsRegExp) != -1;\r\n            fmt.m = fmt.value.search(mPartsRegExp) != -1;\r\n            fmt.y = fmt.value.search(yPartsRegExp) != -1;\r\n\r\n            if(fmt.d) {\r\n                partsFound.d++;\r\n            };\r\n            if(fmt.m) {\r\n                partsFound.m++;\r\n            };\r\n            if(fmt.y) {\r\n                partsFound.y++;\r\n            };\r\n\r\n            if(elem.tagName.toLowerCase() == \"select\") {\r\n                // If we have a selectList, then try to parse the higher and lower limits\r\n                var selOptions = elem.options;\r\n\r\n                // Check the yyyymmdd\r\n                if(fmt.d && fmt.m && fmt.y) {\r\n                    cursorDate = false;\r\n\r\n                    // Dynamically calculate the available \"enabled\" dates\r\n                    options.enabledDates = {};\r\n                    options.disabledDates = {};\r\n\r\n                    for(i = 0; i < selOptions.length; i++) {\r\n                        dt = parseDateString(selOptions[i].value, fmt.value);\r\n\r\n                        if(dt && dt.y && !(dt.m === false) && dt.d) {\r\n\r\n                            dtPartStr = dt.y + \"\" + pad(dt.m) + pad(dt.d);\r\n                            if(!cursorDate) {\r\n                                cursorDate = dtPartStr;\r\n                            };\r\n\r\n                            options.enabledDates[dtPartStr] = 1;\r\n\r\n                            if(!myMin || +dtPartStr < +myMin) {\r\n                                myMin = dtPartStr;\r\n                            };\r\n\r\n                            if(!myMax || +dtPartStr > +myMax) {\r\n                                myMax = dtPartStr;\r\n                            };\r\n                        };\r\n                    };\r\n\r\n                    // Automatically set cursor to first available date (if no bespoke cursorDate was set);\r\n                    if(!options.cursorDate && cursorDate) {\r\n                        options.cursorDate = cursorDate;\r\n                    };\r\n\r\n                    options.disabledDates[myMin] = myMax;\r\n\r\n                } else if(fmt.m && fmt.y) {\r\n\r\n                    for(i = 0; i < selOptions.length; i++) {\r\n                        dt = parseDateString(selOptions[i].value, fmt.value);\r\n                        if(dt.y && !(dt.m === false)) {\r\n                            dtPartStr = dt.y + \"\" + pad(dt.m);\r\n\r\n                            if(!myMin || +dtPartStr < +myMin) {\r\n                                myMin = dtPartStr;\r\n                            };\r\n\r\n                            if(!myMax || +dtPartStr > +myMax) {\r\n                                myMax = dtPartStr;\r\n                            };\r\n                        };\r\n                    };\r\n\r\n                    // Round the min & max values to be used as rangeLow & rangeHigh\r\n                    myMin += \"\" + \"01\";\r\n                    myMax += \"\" + daysInMonth(+myMax.substr(4,2) - 1, +myMax.substr(0,4));\r\n\r\n                } else if(fmt.y) {\r\n                    for(i = 0; i < selOptions.length; i++) {\r\n                        dt = parseDateString(selOptions[i].value, fmt.value);\r\n                        if(dt.y) {\r\n                            if(!myMin || +dt.y < +myMin) {\r\n                                myMin = dt.y;\r\n                            };\r\n\r\n                            if(!myMax || +dt.y > +myMax) {\r\n                                myMax = dt.y;\r\n                            };\r\n                        };\r\n                    };\r\n\r\n                    // Round the min & max values to be used as rangeLow & rangeHigh\r\n                    myMin += \"\" + \"0101\";\r\n                    myMax += \"\" + \"1231\";\r\n                };\r\n            };\r\n        };\r\n\r\n        if(!(partsFound.d == 1 && partsFound.m == 1 && partsFound.y == 1)) {\r\n            if(debug) {\r\n                throw \"Could not find all of the required date parts within the date format for element: \" + elem.id;\r\n            };\r\n            return false;\r\n        };\r\n\r\n        options.rangeLow = dateToYYYYMMDD(options.rangeLow || false);\r\n        options.rangeHigh = dateToYYYYMMDD(options.rangeHigh || false);\r\n        options.cursorDate = dateToYYYYMMDD(options.cursorDate || false);\r\n        if(myMin && (!options.rangeLow  || (+options.rangeLow < +myMin))) {\r\n            options.rangeLow = myMin;\r\n        };\r\n        if(myMax && (!options.rangeHigh || (+options.rangeHigh > +myMax))) {\r\n            options.rangeHigh = myMax;\r\n        };\r\n\r\n        opts = {\r\n            formElements:options.formElements,\r\n            // default values\r\n            defaultVals:defaultVals,\r\n            // Form element id\r\n            id:options.id,\r\n            // Non popup datepicker required\r\n            staticPos:!!(options.staticPos || options.nopopup),\r\n            // Position static datepicker or popup datepicker's button\r\n            positioned:options.positioned && document.getElementById(options.positioned) ? options.positioned : \"\",\r\n            // Ranges stipulated in YYYYMMDD format\r\n            rangeLow:options.rangeLow && String(options.rangeLow).search(rangeRegExp) != -1 ? options.rangeLow : \"\",\r\n            rangeHigh:options.rangeHigh && String(options.rangeHigh).search(rangeRegExp) != -1 ? options.rangeHigh : \"\",\r\n            // Status bar format\r\n            statusFormat:options.statusFormat || statusFormat,\r\n            // No fade in/out effect\r\n            noFadeEffect:!!(options.staticPos) ? true : !!(options.noFadeEffect),\r\n            // No drag functionality\r\n            dragDisabled:nodrag || !!(options.staticPos) ? true : !!(options.dragDisabled),\r\n            // Bespoke tabindex for this datePicker (or its activation button)\r\n            bespokeTabIndex:options.bespokeTabindex && typeof options.bespokeTabindex == 'number' ? parseInt(options.bespokeTabindex, 10) : 0,\r\n            // Bespoke titles\r\n            bespokeTitles:options.bespokeTitles || (bespokeTitles || {}),\r\n            // Final opacity\r\n            finalOpacity:options.finalOpacity && typeof options.finalOpacity == 'number' && (options.finalOpacity > 20 && options.finalOpacity <= 100) ? parseInt(+options.finalOpacity, 10) : (!!(options.staticPos) ? 100 : finalOpacity),\r\n            // Do we hide the form elements on datepicker creation\r\n            hideInput:!!(options.hideInput),\r\n            // Do we hide the \"today\" button\r\n            noToday:!!(options.noTodayButton),\r\n            // Do we show week numbers\r\n            showWeeks:!!(options.showWeeks),\r\n            // Do we fill the entire grid with dates\r\n            fillGrid:!!(options.fillGrid),\r\n            // Do we constrain selection of dates outside the current month\r\n            constrainSelection:\"constrainSelection\" in options ? !!(options.constrainSelection) : true,\r\n            // The date to set the initial cursor to\r\n            cursorDate:options.cursorDate && String(options.cursorDate).search(rangeRegExp) != -1 ? options.cursorDate : \"\",\r\n            // Locate label to set the ARIA labelled-by property\r\n            labelledBy:findLabelForElement(elem),\r\n            // Have we been passed a describedBy to set the ARIA decribed-by property...\r\n            describedBy:(options.describedBy && document.getElementById(options.describedBy)) ? options.describedBy : describedBy && document.getElementById(describedBy) ? describedBy : \"\",\r\n            // Callback functions\r\n            callbacks:options.callbackFunctions ? options.callbackFunctions : {},\r\n            // Days of the week to highlight (normally the weekend)\r\n            highlightDays:options.highlightDays && options.highlightDays.length && options.highlightDays.length == 7 ? options.highlightDays : [0,0,0,0,0,1,1],\r\n            // Days of the week to disable\r\n            disabledDays:options.disabledDays && options.disabledDays.length && options.disabledDays.length == 7 ? options.disabledDays : [0,0,0,0,0,0,0],\r\n            // A bespoke class to give the datepicker\r\n            bespokeClass:options.bespokeClass ? \" \" + options.bespokeClass : \"\"\r\n        };\r\n\r\n        datePickers[options.id] = new datePicker(opts);\r\n\r\n        if(\"disabledDates\" in options && !(options.disabledDates === false)) {\r\n            datePickers[options.id].setDisabledDates(options.disabledDates)\r\n        };\r\n\r\n        if(\"enabledDates\" in options && !(options.enabledDates === false)) {\r\n            datePickers[options.id].setEnabledDates(options.enabledDates)\r\n        };\r\n\r\n        datePickers[options.id].callback(\"create\", datePickers[options.id].createCbArgObj());\r\n    };\r\n\r\n    // Used by the button to dictate whether to open or close the datePicker\r\n    var isVisible = function(id) {\r\n        return (!id || !(id in datePickers)) ? false : datePickers[id].visible;\r\n    };\r\n\r\n    var updateStatic = function() {\r\n        var dp;\r\n        for(dp in datePickers) {\r\n            if(datePickers.hasOwnProperty(dp)) {\r\n                datePickers[dp].changeHandler();\r\n            };\r\n        };\r\n    };\r\n\r\n    var testCSSAnimationSupport = function() {\r\n        var domPrefixes     = [\"Webkit\",\"Moz\", \"ms\", \"O\"],\r\n            elm             = document.createElement('div'),\r\n            transitions     = [\"WebkitTransition\", \"transition\", \"OTransition\", \"MozTransition\", \"msTransition\"],\r\n            t;\r\n        \r\n        for(t = 0; t < transitions.length; t++) {\r\n            if(transitions[t] in elm.style) {\r\n                transitionEnd = transitions[t] == \"webkitTransition\" || transitions[t] == \"OTransition\" ? transitions[t] + \"End\" : \"transitionend\"\r\n                break;\r\n            }\r\n        }\r\n\r\n        if(!transitionEnd) {\r\n            return false;\r\n        };\r\n\r\n        if(elm.style.animationName) { return true; }\r\n\r\n        for( var i = 0; i < domPrefixes.length; i++ ) {\r\n            if(elm.style[domPrefixes[i] + \"AnimationName\"] !== undefined) {\r\n                return true;\r\n            };\r\n        };\r\n\r\n        return false;\r\n    };\r\n\r\n    addEvent(window, 'unload', destroy);\r\n    addEvent(window, \"load\", function() { setTimeout(updateStatic, 0); });\r\n\r\n    // Add oldie class if needed for IE < 9\r\n    if(oldIE) {\r\n        addClass(document.documentElement, \"oldie\");\r\n    };\r\n\r\n    return {\r\n        // General event functions...\r\n        addEvent:               function(obj, type, fn) { return addEvent(obj, type, fn); },\r\n        removeEvent:            function(obj, type, fn) { return removeEvent(obj, type, fn); },\r\n        stopEvent:              function(e) { return stopEvent(e); },\r\n        // Show a single popup datepicker\r\n        show:                   function(inpID) { return showDatePicker(inpID, false); },\r\n        // Hide a popup datepicker\r\n        hide:                   function(inpID) { return hideDatePicker(inpID); },\r\n        // Create a new datepicker\r\n        createDatePicker:       function(options) { addDatePicker(options); },\r\n        // Destroy a datepicker (remove events and DOM nodes)\r\n        destroyDatePicker:      function(inpID) { destroySingleDatePicker(inpID); },\r\n        // Check datePicker form elements exist, if not, destroy the datepicker\r\n        cleanUp:                function() { cleanUp(); },\r\n        // Pretty print a date object according to the format passed in\r\n        printFormattedDate:     function(dt, fmt, useImportedLocale) { return printFormattedDate(dt, fmt, useImportedLocale); },\r\n        // Update the internal date using the form element value\r\n        setDateFromInput:       function(inpID) { if(!inpID || !(inpID in datePickers)) return false; datePickers[inpID].setDateFromInput(); },\r\n        // Set low and high date ranges\r\n        setRangeLow:            function(inpID, yyyymmdd) { if(!inpID || !(inpID in datePickers)) { return false; }; datePickers[inpID].setRangeLow(dateToYYYYMMDD(yyyymmdd)); },\r\n        setRangeHigh:           function(inpID, yyyymmdd) { if(!inpID || !(inpID in datePickers)) { return false; }; datePickers[inpID].setRangeHigh(dateToYYYYMMDD(yyyymmdd)); },\r\n        // Set bespoke titles for a datepicker instance\r\n        setBespokeTitles:       function(inpID, titles) {if(!inpID || !(inpID in datePickers)) { return false; }; datePickers[inpID].setBespokeTitles(titles); },\r\n        // Add bespoke titles for a datepicker instance\r\n        addBespokeTitles:       function(inpID, titles) {if(!inpID || !(inpID in datePickers)) { return false; }; datePickers[inpID].addBespokeTitles(titles); },\r\n        // Attempt to parse a valid date from a date string using the passed in format\r\n        parseDateString:        function(str, format) { return parseDateString(str, format); },\r\n        // Change global configuration parameters\r\n        setGlobalOptions:       function(json) { affectJSON(json); },\r\n        // Forces the datepickers \"selected\" date\r\n        setSelectedDate:        function(inpID, yyyymmdd) { if(!inpID || !(inpID in datePickers)) { return false; }; datePickers[inpID].setSelectedDate(dateToYYYYMMDD(yyyymmdd)); },\r\n        // Is the date valid for selection i.e. not outside ranges etc\r\n        dateValidForSelection:  function(inpID, dt) { if(!inpID || !(inpID in datePickers)) return false; return datePickers[inpID].canDateBeSelected(dt); },\r\n        // Add disabled and enabled dates\r\n        addDisabledDates:       function(inpID, dts) { if(!inpID || !(inpID in datePickers)) return false; datePickers[inpID].addDisabledDates(dts); },\r\n        setDisabledDates:       function(inpID, dts) { if(!inpID || !(inpID in datePickers)) return false; datePickers[inpID].setDisabledDates(dts); },\r\n        addEnabledDates:        function(inpID, dts) { if(!inpID || !(inpID in datePickers)) return false; datePickers[inpID].addEnabledDates(dts); },\r\n        setEnabledDates:        function(inpID, dts) { if(!inpID || !(inpID in datePickers)) return false; datePickers[inpID].setEnabledDates(dts); },\r\n        // Disable and enable the datepicker\r\n        disable:                function(inpID) { if(!inpID || !(inpID in datePickers)) return false; datePickers[inpID].disableDatePicker(); },\r\n        enable:                 function(inpID) { if(!inpID || !(inpID in datePickers)) return false; datePickers[inpID].enableDatePicker(); },\r\n        // Set the cursor date\r\n        setCursorDate:          function(inpID, yyyymmdd) { if(!inpID || !(inpID in datePickers)) return false; datePickers[inpID].setCursorDate(dateToYYYYMMDD(yyyymmdd)); },\r\n        // Whats the currently selected date\r\n        getSelectedDate:        function(inpID) { return (!inpID || !(inpID in datePickers)) ? false : datePickers[inpID].returnSelectedDate(); },\r\n        // Attempt to update the language (causes a redraw of all datepickers on the page)\r\n        loadLanguage:           function() { loadLanguage(); },\r\n        // Set the debug level i.e. throw errors or fail silently\r\n        setDebug:               function(dbg) { debug = !!(dbg); },\r\n        // Converts Date Object to a YYYYMMDD formatted String\r\n        dateToYYYYMMDDStr:      function(dt) { return dateToYYYYMMDD(dt); }\r\n    };\r\n}))\r\n\n\n//# sourceURL=webpack://adhocracy-plus/./node_modules/datepicker/js/datepicker.js?");

/***/ }),

/***/ "./node_modules/datepicker/css/datepicker.min.css":
/*!********************************************************!*\
  !*** ./node_modules/datepicker/css/datepicker.min.css ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://adhocracy-plus/./node_modules/datepicker/css/datepicker.min.css?");

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ var __webpack_exports__ = (__webpack_exec__("./adhocracy-plus/assets/js/init-picker.js"), __webpack_exec__("./node_modules/datepicker/css/datepicker.min.css"));
/******/ }
]);