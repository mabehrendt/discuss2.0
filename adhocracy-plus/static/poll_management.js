"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkadhocracy_plus"] = self["webpackChunkadhocracy_plus"] || []).push([["poll_management"],{

/***/ "./node_modules/adhocracy4/adhocracy4/polls/static/PollDashboard/EditPollChoice.jsx":
/*!******************************************************************************************!*\
  !*** ./node_modules/adhocracy4/adhocracy4/polls/static/PollDashboard/EditPollChoice.jsx ***!
  \******************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.EditPollChoice = void 0;\nvar _react = _interopRequireDefault(__webpack_require__(/*! react */ \"./node_modules/react/index.js\"));\nvar _django = _interopRequireDefault(__webpack_require__(/*! django */ \"django\"));\nvar _FormFieldError = _interopRequireDefault(__webpack_require__(/*! ../../../static/FormFieldError */ \"./node_modules/adhocracy4/adhocracy4/static/FormFieldError.jsx\"));\nvar EditPollChoice = exports.EditPollChoice = function EditPollChoice(props) {\n  return /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"form-group\"\n  }, /*#__PURE__*/_react.default.createElement(\"div\", {\n    htmlFor: 'id_choices-' + props.id + '-name'\n  }, _django.default.pgettext('noun', 'Answer'), \" \", props.index, props.choiceId && /*#__PURE__*/_react.default.createElement(\"span\", {\n    className: \"editpoll__help-text\"\n  }, \" Id: A\", props.choiceId), /*#__PURE__*/_react.default.createElement(\"span\", {\n    className: \"visually-hidden\"\n  }, props.label)), /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"input-group\"\n  }, /*#__PURE__*/_react.default.createElement(\"input\", {\n    id: 'id_choices-' + props.id + '-name',\n    name: 'choices-' + props.id + '-name',\n    type: \"text\",\n    className: \"input-group__input\",\n    value: props.choice.label,\n    onChange: function onChange(e) {\n      props.onLabelChange(e.target.value);\n    },\n    disabled: props.isOther,\n    \"aria-invalid\": props.errors ? 'true' : 'false',\n    \"aria-describedby\": props.errors && 'id_error-' + props.id\n  }), /*#__PURE__*/_react.default.createElement(\"button\", {\n    className: \"input-group__after btn editpoll__btn--delete\",\n    onClick: props.onDelete,\n    title: _django.default.gettext('remove'),\n    type: \"button\",\n    disabled: props.undeletable\n  }, /*#__PURE__*/_react.default.createElement(\"i\", {\n    className: \"fa fa-times\",\n    \"aria-label\": _django.default.gettext('remove')\n  }))), /*#__PURE__*/_react.default.createElement(_FormFieldError.default, {\n    id: 'id_error-' + props.id,\n    error: props.errors,\n    field: \"label\"\n  }));\n};\n\n//# sourceURL=webpack://adhocracy-plus/./node_modules/adhocracy4/adhocracy4/polls/static/PollDashboard/EditPollChoice.jsx?");

/***/ }),

/***/ "./node_modules/adhocracy4/adhocracy4/polls/static/PollDashboard/EditPollDropdown.jsx":
/*!********************************************************************************************!*\
  !*** ./node_modules/adhocracy4/adhocracy4/polls/static/PollDashboard/EditPollDropdown.jsx ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar _react = _interopRequireDefault(__webpack_require__(/*! react */ \"./node_modules/react/index.js\"));\nvar _django = _interopRequireDefault(__webpack_require__(/*! django */ \"django\"));\nvar translated = {\n  new: _django.default.gettext(' New Question'),\n  multi: _django.default.gettext('Multiple Choice question'),\n  open: _django.default.gettext('Open question')\n};\nvar EditPollDropdown = function EditPollDropdown(props) {\n  return /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"dropdown editpoll__dropdown\"\n  }, /*#__PURE__*/_react.default.createElement(\"button\", {\n    type: \"button\",\n    className: \"dropdown-toggle btn btn--light\",\n    \"aria-haspopup\": \"true\",\n    \"aria-expanded\": \"false\",\n    \"data-bs-toggle\": \"dropdown\"\n  }, /*#__PURE__*/_react.default.createElement(\"i\", {\n    className: \"fa fa-plus\"\n  }), translated.new), /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"dropdown-menu\"\n  }, /*#__PURE__*/_react.default.createElement(\"button\", {\n    key: \"1\",\n    className: \"dropdown-item\",\n    type: \"button\",\n    onClick: props.handleToggleMulti\n  }, translated.multi), /*#__PURE__*/_react.default.createElement(\"button\", {\n    key: \"2\",\n    className: \"dropdown-item\",\n    type: \"button\",\n    onClick: props.handleToggleOpen\n  }, translated.open)));\n};\nvar _default = exports[\"default\"] = EditPollDropdown;\n\n//# sourceURL=webpack://adhocracy-plus/./node_modules/adhocracy4/adhocracy4/polls/static/PollDashboard/EditPollDropdown.jsx?");

/***/ }),

/***/ "./node_modules/adhocracy4/adhocracy4/polls/static/PollDashboard/EditPollManagement.jsx":
/*!**********************************************************************************************!*\
  !*** ./node_modules/adhocracy4/adhocracy4/polls/static/PollDashboard/EditPollManagement.jsx ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nvar _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ \"./node_modules/@babel/runtime/helpers/typeof.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.EditPollManagement = void 0;\nvar _extends2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/extends */ \"./node_modules/@babel/runtime/helpers/extends.js\"));\nvar _slicedToArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ \"./node_modules/@babel/runtime/helpers/slicedToArray.js\"));\nvar _react = _interopRequireWildcard(__webpack_require__(/*! react */ \"./node_modules/react/index.js\"));\nvar _django = _interopRequireDefault(__webpack_require__(/*! django */ \"django\"));\nvar _reactFlipMove = _interopRequireDefault(__webpack_require__(/*! react-flip-move */ \"./node_modules/react-flip-move/dist/react-flip-move.es.js\"));\nvar _immutabilityHelper = _interopRequireDefault(__webpack_require__(/*! immutability-helper */ \"./node_modules/immutability-helper/index.js\"));\nvar _EditPollQuestion = __webpack_require__(/*! ./EditPollQuestion */ \"./node_modules/adhocracy4/adhocracy4/polls/static/PollDashboard/EditPollQuestion.jsx\");\nvar _EditPollOpenQuestion = __webpack_require__(/*! ./EditPollOpenQuestion */ \"./node_modules/adhocracy4/adhocracy4/polls/static/PollDashboard/EditPollOpenQuestion.jsx\");\nvar _EditPollDropdown = _interopRequireDefault(__webpack_require__(/*! ./EditPollDropdown */ \"./node_modules/adhocracy4/adhocracy4/polls/static/PollDashboard/EditPollDropdown.jsx\"));\nvar _dashboard = __webpack_require__(/*! ../../../../adhocracy4/dashboard/assets/dashboard */ \"./node_modules/adhocracy4/adhocracy4/dashboard/assets/dashboard.js\");\nvar _api = _interopRequireDefault(__webpack_require__(/*! ../../../static/api */ \"./node_modules/adhocracy4/adhocracy4/static/api.js\"));\nvar _Alert = _interopRequireDefault(__webpack_require__(/*! ../../../static/Alert */ \"./node_modules/adhocracy4/adhocracy4/static/Alert.jsx\"));\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != _typeof(e) && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n// | Helper method for local scoped key/identifier\n\nvar maxLocalKey = 0;\nvar getNextLocalKey = function getNextLocalKey() {\n  // Get an artificial key for non-committed items.\n  // The key is prefixed to prevent collisions with real database keys.\n  return 'local_' + maxLocalKey++;\n};\nvar EditPollManagement = exports.EditPollManagement = function EditPollManagement(props) {\n  var _useState = (0, _react.useState)([]),\n    _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n    questions = _useState2[0],\n    setQuestions = _useState2[1];\n  var _useState3 = (0, _react.useState)([]),\n    _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n    errors = _useState4[0],\n    setErrors = _useState4[1];\n  var _useState5 = (0, _react.useState)(null),\n    _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n    alert = _useState6[0],\n    setAlert = _useState6[1];\n  (0, _react.useEffect)(function () {\n    _api.default.poll.get(props.pollId).done(function (_ref) {\n      var questions = _ref.questions;\n      questions.length > 0 ? setQuestions(questions) : setQuestions([getNewQuestion()]);\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  var getNewQuestion = function getNewQuestion() {\n    var label = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var helptext = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    return {\n      label: label,\n      help_text: helptext,\n      multiple_choice: false,\n      key: getNextLocalKey(),\n      is_open: false,\n      choices: [getNewChoice(), getNewChoice()],\n      answers: []\n    };\n  };\n\n  // | Question state related handlers\n\n  var getNewOpenQuestion = function getNewOpenQuestion() {\n    var label = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var newQuestion = getNewQuestion(label);\n    newQuestion.is_open = true;\n    newQuestion.choices = [];\n    return newQuestion;\n  };\n  var handleQuestionLabel = function handleQuestionLabel(index, label) {\n    var diff = {};\n    diff[index] = {\n      $merge: {\n        label: label\n      }\n    };\n    setQuestions((0, _immutabilityHelper.default)(questions, diff));\n  };\n  var handleQuestionHelpText = function handleQuestionHelpText(index, helptext) {\n    var diff = {};\n    diff[index] = {\n      $merge: {\n        help_text: helptext\n      }\n    };\n    setQuestions((0, _immutabilityHelper.default)(questions, diff));\n  };\n  var handleQuestionMultiChoice = function handleQuestionMultiChoice(index, multipleChoice) {\n    var diff = {};\n    diff[index] = {\n      $merge: {\n        multiple_choice: multipleChoice\n      }\n    };\n    setQuestions((0, _immutabilityHelper.default)(questions, diff));\n  };\n  var handleQuestionAppend = function handleQuestionAppend(params, index) {\n    var diff = {};\n    var newQuestion = params && params.isOpen ? getNewOpenQuestion() : getNewQuestion();\n    diff = {\n      $push: [newQuestion]\n    };\n    setQuestions((0, _immutabilityHelper.default)(questions, diff));\n  };\n  var handleQuestionDelete = function handleQuestionDelete(index) {\n    var diff = {};\n    diff = {\n      $splice: [[index, 1]]\n    };\n    setQuestions((0, _immutabilityHelper.default)(questions, diff));\n  };\n  var handleQuestionMoveUp = function handleQuestionMoveUp(index) {\n    var diff = {};\n    var position = index - 1;\n    diff = {\n      $splice: [[index, 1],\n      // remove from current index\n      [position, 0, questions[index]] // insert to new index\n      ]\n    };\n    setQuestions((0, _immutabilityHelper.default)(questions, diff));\n  };\n  var handleQuestionMoveDown = function handleQuestionMoveDown(index) {\n    var diff = {};\n    var position = index + 1;\n    diff = {\n      $splice: [[index, 1], [position, 0, questions[index]]]\n    };\n    setQuestions((0, _immutabilityHelper.default)(questions, diff));\n  };\n\n  // | Choice state related handlers\n\n  var getNewChoice = function getNewChoice() {\n    var label = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var isOther = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    return {\n      label: label,\n      key: isOther ? 'other-choice' : getNextLocalKey(),\n      is_other_choice: isOther\n    };\n  };\n  var handleChoiceLabel = function handleChoiceLabel(index, choiceIndex, label) {\n    var diff = {};\n    diff[index] = {\n      choices: {}\n    };\n    diff[index].choices[choiceIndex] = {\n      $merge: {\n        label: label\n      }\n    };\n    setQuestions((0, _immutabilityHelper.default)(questions, diff));\n  };\n  var handleChoiceAppend = function handleChoiceAppend(index, hasOtherOption) {\n    var position = questions[index].choices.length - 1;\n    var newChoice = getNewChoice();\n    var diff = {};\n    diff[index] = hasOtherOption ? {\n      choices: {\n        $splice: [[position, 0, newChoice]]\n      }\n    } : {\n      choices: {\n        $push: [newChoice]\n      }\n    };\n    setQuestions((0, _immutabilityHelper.default)(questions, diff));\n  };\n  var handleChoiceIsOtherChoice = function handleChoiceIsOtherChoice(index, isOtherChoice) {\n    var diff = {};\n    if (isOtherChoice) {\n      var otherChoice = getNewChoice('other', true);\n      diff[index] = {\n        choices: {\n          $push: [otherChoice]\n        }\n      };\n    } else {\n      var choiceIndex = questions[index].choices.findIndex(function (c) {\n        return c.key === 'other-choice';\n      });\n      diff[index] = {\n        choices: {\n          $splice: [[choiceIndex, 1]]\n        }\n      };\n    }\n    setQuestions((0, _immutabilityHelper.default)(questions, diff));\n  };\n  var handleChoiceDelete = function handleChoiceDelete(index, choiceIndex) {\n    var diff = {};\n    diff[index] = {\n      choices: {\n        $splice: [[choiceIndex, 1]]\n      }\n    };\n    setQuestions((0, _immutabilityHelper.default)(questions, diff));\n  };\n\n  // | Poll form and submit logic\n\n  var removeAlert = function removeAlert() {\n    setAlert(null);\n  };\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    var data = {\n      questions: questions\n    };\n    _api.default.poll.change(data, props.pollId).done(function (data) {\n      setQuestions(data.questions);\n      setAlert({\n        alertAttribute: 'polite',\n        type: 'success',\n        message: _django.default.gettext('The poll has been updated.')\n      });\n      setErrors([]);\n      if (props.reloadOnSuccess) {\n        (0, _dashboard.updateDashboard)();\n      }\n    }).fail(function (xhr, status, err) {\n      if (xhr.responseJSON && 'questions' in xhr.responseJSON) {\n        setErrors(xhr.responseJSON.questions);\n      }\n      setAlert({\n        alertAttribute: 'assertive',\n        type: 'danger',\n        message: _django.default.gettext('The poll could not be updated. Please check the data you entered again.')\n      });\n    });\n  };\n\n  // | JSX render\n\n  return /*#__PURE__*/_react.default.createElement(\"form\", {\n    onSubmit: function onSubmit(e) {\n      return handleSubmit(e);\n    },\n    onChange: function onChange() {\n      return removeAlert();\n    },\n    className: \"editpoll__questions\"\n  }, /*#__PURE__*/_react.default.createElement(_reactFlipMove.default, {\n    easing: \"cubic-bezier(0.25, 0.5, 0.75, 1)\"\n  }, questions.map(function (question, index, arr) {\n    var key = question.id || question.key;\n    return question.is_open ? /*#__PURE__*/_react.default.createElement(\"div\", {\n      key: key\n    }, /*#__PURE__*/_react.default.createElement(_EditPollOpenQuestion.EditPollOpenQuestion, {\n      id: key,\n      question: question,\n      onLabelChange: function onLabelChange(label) {\n        return handleQuestionLabel(index, label);\n      },\n      onHelptextChange: function onHelptextChange(helptext) {\n        return handleQuestionHelpText(index, helptext);\n      },\n      onMoveUp: index !== 0 ? function () {\n        return handleQuestionMoveUp(index);\n      } : null,\n      onMoveDown: index < arr.length - 1 ? function () {\n        return handleQuestionMoveDown(index);\n      } : null,\n      onDelete: function onDelete() {\n        return handleQuestionDelete(index);\n      },\n      errors: errors && errors[index] ? errors[index] : {}\n    })) : /*#__PURE__*/_react.default.createElement(\"div\", {\n      key: key\n    }, /*#__PURE__*/_react.default.createElement(_EditPollQuestion.EditPollQuestion, {\n      id: key,\n      question: question,\n      onLabelChange: function onLabelChange(label) {\n        return handleQuestionLabel(index, label);\n      },\n      onHelptextChange: function onHelptextChange(helptext) {\n        return handleQuestionHelpText(index, helptext);\n      },\n      onMultipleChoiceChange: function onMultipleChoiceChange(multipleChoice) {\n        return handleQuestionMultiChoice(index, multipleChoice);\n      },\n      onMoveUp: index !== 0 ? function () {\n        return handleQuestionMoveUp(index);\n      } : null,\n      onMoveDown: index < arr.length - 1 ? function () {\n        return handleQuestionMoveDown(index);\n      } : null,\n      onDelete: function onDelete() {\n        return handleQuestionDelete(index);\n      },\n      errors: errors && errors[index] ? errors[index] : {},\n      onHasOtherChoiceChange: function onHasOtherChoiceChange(isOtherChoice) {\n        return handleChoiceIsOtherChoice(index, isOtherChoice);\n      },\n      onChoiceLabelChange: function onChoiceLabelChange(choiceIndex, label) {\n        return handleChoiceLabel(index, choiceIndex, label);\n      },\n      onDeleteChoice: function onDeleteChoice(choiceIndex) {\n        return handleChoiceDelete(index, choiceIndex);\n      },\n      onAppendChoice: function onAppendChoice(hasOtherOption) {\n        return handleChoiceAppend(index, hasOtherOption);\n      }\n    }));\n  })), /*#__PURE__*/_react.default.createElement(_Alert.default, (0, _extends2.default)({\n    onClick: function onClick() {\n      return removeAlert();\n    }\n  }, alert)), /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"editpoll__question-container\"\n  }, /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"editpoll__question\"\n  }, /*#__PURE__*/_react.default.createElement(_EditPollDropdown.default, {\n    handleToggleMulti: function handleToggleMulti() {\n      return handleQuestionAppend();\n    },\n    handleToggleOpen: function handleToggleOpen() {\n      return handleQuestionAppend({\n        isOpen: true\n      });\n    }\n  })), /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"editpoll__question-actions\"\n  }, /*#__PURE__*/_react.default.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn--primary\"\n  }, _django.default.gettext('Save')))));\n};\n\n//# sourceURL=webpack://adhocracy-plus/./node_modules/adhocracy4/adhocracy4/polls/static/PollDashboard/EditPollManagement.jsx?");

/***/ }),

/***/ "./node_modules/adhocracy4/adhocracy4/polls/static/PollDashboard/EditPollOpenQuestion.jsx":
/*!************************************************************************************************!*\
  !*** ./node_modules/adhocracy4/adhocracy4/polls/static/PollDashboard/EditPollOpenQuestion.jsx ***!
  \************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nvar _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ \"./node_modules/@babel/runtime/helpers/typeof.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.EditPollOpenQuestion = void 0;\nvar _slicedToArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ \"./node_modules/@babel/runtime/helpers/slicedToArray.js\"));\nvar _react = _interopRequireWildcard(__webpack_require__(/*! react */ \"./node_modules/react/index.js\"));\nvar _django = _interopRequireDefault(__webpack_require__(/*! django */ \"django\"));\nvar _FormFieldError = _interopRequireDefault(__webpack_require__(/*! ../../../static/FormFieldError */ \"./node_modules/adhocracy4/adhocracy4/static/FormFieldError.jsx\"));\nvar _HelptextForm = __webpack_require__(/*! ./HelptextForm */ \"./node_modules/adhocracy4/adhocracy4/polls/static/PollDashboard/HelptextForm.jsx\");\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != _typeof(e) && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\nvar EditPollOpenQuestion = exports.EditPollOpenQuestion = function EditPollOpenQuestion(props) {\n  var _useState = (0, _react.useState)(props.question.help_text),\n    _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n    hasHelptext = _useState2[0],\n    setHasHelptext = _useState2[1];\n  return /*#__PURE__*/_react.default.createElement(\"section\", {\n    className: \"editpoll__question-container\"\n  }, /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"editpoll__question\"\n  }, /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"editpoll__question--border\"\n  }, /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"form-group\"\n  }, /*#__PURE__*/_react.default.createElement(\"label\", {\n    htmlFor: 'id_questions-' + props.id + '-name'\n  }, _django.default.gettext('Question'), props.question.id && /*#__PURE__*/_react.default.createElement(\"span\", {\n    className: \"editpoll__help-text\"\n  }, \" Id: Q\", props.question.id), /*#__PURE__*/_react.default.createElement(\"textarea\", {\n    id: 'id_questions-' + props.id + '-name',\n    name: 'questions-' + props.id + '-name',\n    value: props.question.label,\n    onChange: function onChange(e) {\n      props.onLabelChange(e.target.value);\n    },\n    \"aria-invalid\": props.errors ? 'true' : 'false',\n    \"aria-describedby\": props.errors && 'id_error-' + props.id\n  }), /*#__PURE__*/_react.default.createElement(_FormFieldError.default, {\n    id: 'id_error-' + props.id,\n    error: props.errors,\n    field: \"label\"\n  }))), hasHelptext ? /*#__PURE__*/_react.default.createElement(_HelptextForm.HelptextForm, {\n    id: props.id,\n    question: props.question,\n    onHelptextChange: props.onHelptextChange,\n    errors: props.errors\n  }) : null, /*#__PURE__*/_react.default.createElement(\"button\", {\n    className: 'btn ' + (hasHelptext ? 'editpoll__btn--dark' : 'editpoll__btn--question'),\n    onClick: function onClick() {\n      return setHasHelptext(!hasHelptext);\n    },\n    type: \"button\"\n  }, /*#__PURE__*/_react.default.createElement(\"i\", {\n    className: 'fa ' + (hasHelptext ? 'fa-check' : 'fa-plus')\n  }), \" \", _django.default.gettext('Explanation')))), /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"editpoll__question-actions btn-group\",\n    role: \"group\"\n  }, /*#__PURE__*/_react.default.createElement(\"button\", {\n    className: \"btn poll__btn--light\",\n    onClick: props.onMoveUp,\n    disabled: !props.onMoveUp,\n    title: _django.default.gettext('Move up'),\n    type: \"button\"\n  }, /*#__PURE__*/_react.default.createElement(\"i\", {\n    className: \"fa fa-chevron-up\",\n    \"aria-label\": _django.default.gettext('Move up')\n  })), /*#__PURE__*/_react.default.createElement(\"button\", {\n    className: \"btn poll__btn--light\",\n    onClick: props.onMoveDown,\n    disabled: !props.onMoveDown,\n    title: _django.default.gettext('Move down'),\n    type: \"button\"\n  }, /*#__PURE__*/_react.default.createElement(\"i\", {\n    className: \"fa fa-chevron-down\",\n    \"aria-label\": _django.default.gettext('Move down')\n  })), /*#__PURE__*/_react.default.createElement(\"button\", {\n    className: \"btn poll__btn--light\",\n    onClick: props.onDelete,\n    title: _django.default.gettext('Delete'),\n    type: \"button\"\n  }, /*#__PURE__*/_react.default.createElement(\"i\", {\n    className: \"fas fa-trash-alt\",\n    \"aria-label\": _django.default.gettext('Delete')\n  }))));\n};\n\n//# sourceURL=webpack://adhocracy-plus/./node_modules/adhocracy4/adhocracy4/polls/static/PollDashboard/EditPollOpenQuestion.jsx?");

/***/ }),

/***/ "./node_modules/adhocracy4/adhocracy4/polls/static/PollDashboard/EditPollQuestion.jsx":
/*!********************************************************************************************!*\
  !*** ./node_modules/adhocracy4/adhocracy4/polls/static/PollDashboard/EditPollQuestion.jsx ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nvar _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ \"./node_modules/@babel/runtime/helpers/typeof.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.EditPollQuestion = void 0;\nvar _slicedToArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ \"./node_modules/@babel/runtime/helpers/slicedToArray.js\"));\nvar _react = _interopRequireWildcard(__webpack_require__(/*! react */ \"./node_modules/react/index.js\"));\nvar _EditPollChoice = __webpack_require__(/*! ./EditPollChoice */ \"./node_modules/adhocracy4/adhocracy4/polls/static/PollDashboard/EditPollChoice.jsx\");\nvar _django = _interopRequireDefault(__webpack_require__(/*! django */ \"django\"));\nvar _FormFieldError = _interopRequireDefault(__webpack_require__(/*! ../../../static/FormFieldError */ \"./node_modules/adhocracy4/adhocracy4/static/FormFieldError.jsx\"));\nvar _HelptextForm = __webpack_require__(/*! ./HelptextForm */ \"./node_modules/adhocracy4/adhocracy4/polls/static/PollDashboard/HelptextForm.jsx\");\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != _typeof(e) && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\nvar FlipMove = (__webpack_require__(/*! react-flip-move */ \"./node_modules/react-flip-move/dist/react-flip-move.es.js\")[\"default\"]);\nvar EditPollQuestion = exports.EditPollQuestion = function EditPollQuestion(props) {\n  var _useState = (0, _react.useState)(props.question.help_text),\n    _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n    hasHelptext = _useState2[0],\n    setHasHelptext = _useState2[1];\n  var hasOtherOption = props.question.choices.find(function (c) {\n    return c.is_other_choice;\n  });\n  return /*#__PURE__*/_react.default.createElement(\"section\", {\n    className: \"editpoll__question-container\"\n  }, /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"editpoll__question\"\n  }, /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"form-group editpoll__question--border\"\n  }, /*#__PURE__*/_react.default.createElement(\"label\", {\n    htmlFor: 'id_questions-' + props.id + '-name'\n  }, _django.default.gettext('Question'), props.question.id && /*#__PURE__*/_react.default.createElement(\"span\", {\n    className: \"editpoll__help-text\"\n  }, \" Id: Q\", props.question.id), /*#__PURE__*/_react.default.createElement(\"textarea\", {\n    id: 'id_questions-' + props.id + '-name',\n    name: 'questions-' + props.id + '-name',\n    value: props.question.label,\n    onChange: function onChange(e) {\n      props.onLabelChange(e.target.value);\n    },\n    \"aria-invalid\": props.errors ? 'true' : 'false',\n    \"aria-describedby\": props.errors && 'id_error-' + props.id\n  }), /*#__PURE__*/_react.default.createElement(_FormFieldError.default, {\n    id: 'id_error-' + props.id,\n    error: props.errors,\n    field: \"label\"\n  })), hasHelptext ? /*#__PURE__*/_react.default.createElement(_HelptextForm.HelptextForm, {\n    id: props.id,\n    question: props.question,\n    onHelptextChange: props.onHelptextChange,\n    errors: props.errors\n  }) : null, /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"form-check\"\n  }, /*#__PURE__*/_react.default.createElement(\"label\", {\n    className: \"form-check__label\",\n    htmlFor: 'id_questions-' + props.id + '-multiple_choice'\n  }, /*#__PURE__*/_react.default.createElement(\"input\", {\n    type: \"checkbox\",\n    id: 'id_questions-' + props.id + '-multiple_choice',\n    name: 'questions-' + props.id + '-multiple_choice',\n    checked: props.question.multiple_choice,\n    onChange: function onChange(e) {\n      props.onMultipleChoiceChange(e.target.checked);\n    }\n  }), \"\\xA0\", _django.default.gettext('Participants can vote for more than one option (multiple choice)'))), /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"form-check\"\n  }, /*#__PURE__*/_react.default.createElement(\"label\", {\n    className: \"form-check__label\",\n    htmlFor: 'id_questions-' + props.id + '-is_other_choice'\n  }, /*#__PURE__*/_react.default.createElement(\"input\", {\n    type: \"checkbox\",\n    id: 'id_questions-' + props.id + '-is_other_choice',\n    name: 'questions-' + props.id + '-is_other_choice',\n    checked: hasOtherOption || false,\n    onChange: function onChange(e) {\n      props.onHasOtherChoiceChange(e.target.checked);\n    },\n    disabled: props.question.choices.length < 3 && hasOtherOption\n  }), \"\\xA0\", _django.default.gettext('Participants can add their own answer'))), /*#__PURE__*/_react.default.createElement(FlipMove, {\n    easing: \"cubic-bezier(0.25, 0.5, 0.75, 1)\"\n  }, props.question.choices.map(function (choice, index) {\n    var key = choice.id || choice.key;\n    var label = _django.default.pgettext('noun', 'Answer') + ' #' + (index + 1);\n    var errors = props.errors && props.errors.choices ? props.errors.choices[index] : {};\n    return !choice.is_other_choice ? /*#__PURE__*/_react.default.createElement(\"div\", {\n      key: key\n    }, /*#__PURE__*/_react.default.createElement(_EditPollChoice.EditPollChoice, {\n      id: 'id_questions-poll' + props.id + '-multiple_choice',\n      index: index + 1,\n      label: label,\n      choice: choice,\n      choiceId: choice.id,\n      onLabelChange: function onLabelChange(label) {\n        props.onChoiceLabelChange(index, label);\n      },\n      onDelete: function onDelete() {\n        props.onDeleteChoice(index);\n      },\n      errors: errors,\n      undeletable: props.question.choices.length < 3\n    })) : /*#__PURE__*/_react.default.createElement(\"div\", {\n      key: key\n    }, /*#__PURE__*/_react.default.createElement(_EditPollChoice.EditPollChoice, {\n      id: 'id_questions-poll' + props.id + '-is_other_choice',\n      index: index + 1,\n      label: _django.default.gettext('Other'),\n      choice: {\n        label: _django.default.gettext('Other')\n      },\n      choiceId: choice.id,\n      onDelete: function onDelete() {\n        return props.onHasOtherChoiceChange(false);\n      },\n      undeletable: props.question.choices.length < 3,\n      isOther: true\n    }));\n  })), /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"editpoll__btns--question\"\n  }, /*#__PURE__*/_react.default.createElement(\"button\", {\n    className: \"btn editpoll__btn--question\",\n    onClick: function onClick() {\n      return props.onAppendChoice(hasOtherOption);\n    },\n    type: \"button\"\n  }, /*#__PURE__*/_react.default.createElement(\"i\", {\n    className: \"fa fa-plus\"\n  }), \" \", _django.default.gettext('New answer')), /*#__PURE__*/_react.default.createElement(\"button\", {\n    className: 'btn ' + (hasHelptext ? 'editpoll__btn--dark' : 'editpoll__btn--question'),\n    onClick: function onClick() {\n      return setHasHelptext(!hasHelptext);\n    },\n    type: \"button\"\n  }, /*#__PURE__*/_react.default.createElement(\"i\", {\n    className: 'fa ' + (hasHelptext ? 'fa-check' : 'fa-plus')\n  }), \" \", _django.default.gettext('Explanation'))))), /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"editpoll__question-actions btn-group\",\n    role: \"group\"\n  }, /*#__PURE__*/_react.default.createElement(\"button\", {\n    className: \"btn poll__btn--light\",\n    onClick: props.onMoveUp,\n    disabled: !props.onMoveUp,\n    title: _django.default.gettext('Move up'),\n    type: \"button\"\n  }, /*#__PURE__*/_react.default.createElement(\"i\", {\n    className: \"fa fa-chevron-up\",\n    \"aria-label\": _django.default.gettext('Move up')\n  })), /*#__PURE__*/_react.default.createElement(\"button\", {\n    className: \"btn poll__btn--light\",\n    onClick: props.onMoveDown,\n    disabled: !props.onMoveDown,\n    title: _django.default.gettext('Move down'),\n    type: \"button\"\n  }, /*#__PURE__*/_react.default.createElement(\"i\", {\n    className: \"fa fa-chevron-down\",\n    \"aria-label\": _django.default.gettext('Move down')\n  })), /*#__PURE__*/_react.default.createElement(\"button\", {\n    className: \"btn poll__btn--light\",\n    onClick: props.onDelete,\n    title: _django.default.gettext('Delete'),\n    type: \"button\"\n  }, /*#__PURE__*/_react.default.createElement(\"i\", {\n    className: \"fas fa-trash-alt\",\n    \"aria-label\": _django.default.gettext('Delete')\n  }))));\n};\n\n//# sourceURL=webpack://adhocracy-plus/./node_modules/adhocracy4/adhocracy4/polls/static/PollDashboard/EditPollQuestion.jsx?");

/***/ }),

/***/ "./node_modules/adhocracy4/adhocracy4/polls/static/PollDashboard/HelptextForm.jsx":
/*!****************************************************************************************!*\
  !*** ./node_modules/adhocracy4/adhocracy4/polls/static/PollDashboard/HelptextForm.jsx ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.HelptextForm = void 0;\nvar _react = _interopRequireDefault(__webpack_require__(/*! react */ \"./node_modules/react/index.js\"));\nvar _django = _interopRequireDefault(__webpack_require__(/*! django */ \"django\"));\nvar _FormFieldError = _interopRequireDefault(__webpack_require__(/*! ../../../static/FormFieldError */ \"./node_modules/adhocracy4/adhocracy4/static/FormFieldError.jsx\"));\nvar HelptextForm = exports.HelptextForm = function HelptextForm(props) {\n  return /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"form-group\"\n  }, /*#__PURE__*/_react.default.createElement(\"label\", {\n    htmlFor: 'id_helptext-' + props.id + '-name'\n  }, _django.default.gettext('Explanation'), /*#__PURE__*/_react.default.createElement(\"textarea\", {\n    id: 'id_helptext-' + props.id + '-name',\n    name: 'helptext-' + props.id + '-name',\n    value: props.question.help_text,\n    onChange: function onChange(e) {\n      props.onHelptextChange(e.target.value);\n    },\n    \"aria-invalid\": props.errors ? 'true' : 'false',\n    \"aria-describedby\": props.errors && 'id_error-' + props.id\n  }), /*#__PURE__*/_react.default.createElement(_FormFieldError.default, {\n    id: 'id_error-' + props.id,\n    error: props.errors,\n    field: \"help_text\"\n  })));\n};\n\n//# sourceURL=webpack://adhocracy-plus/./node_modules/adhocracy4/adhocracy4/polls/static/PollDashboard/HelptextForm.jsx?");

/***/ }),

/***/ "./node_modules/adhocracy4/adhocracy4/polls/static/react_poll_management.jsx":
/*!***********************************************************************************!*\
  !*** ./node_modules/adhocracy4/adhocracy4/polls/static/react_poll_management.jsx ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval("\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nvar _react = _interopRequireDefault(__webpack_require__(/*! react */ \"./node_modules/react/index.js\"));\nvar _client = __webpack_require__(/*! react-dom/client */ \"./node_modules/react-dom/client.js\");\nvar _widget = __webpack_require__(/*! ../../static/widget */ \"./node_modules/adhocracy4/adhocracy4/static/widget.js\");\nvar _EditPollManagement = __webpack_require__(/*! ./PollDashboard/EditPollManagement */ \"./node_modules/adhocracy4/adhocracy4/polls/static/PollDashboard/EditPollManagement.jsx\");\nfunction init() {\n  (0, _widget.initialise)('a4', 'poll-management', function (el) {\n    var pollId = el.dataset.pollId;\n    var root = (0, _client.createRoot)(el);\n    var reloadOnSuccess = JSON.parse(el.getAttribute('data-reloadOnSuccess'));\n    root.render( /*#__PURE__*/_react.default.createElement(_EditPollManagement.EditPollManagement, {\n      pollId: pollId,\n      reloadOnSuccess: reloadOnSuccess\n    }));\n  });\n}\ndocument.addEventListener('DOMContentLoaded', init, false);\n\n//# sourceURL=webpack://adhocracy-plus/./node_modules/adhocracy4/adhocracy4/polls/static/react_poll_management.jsx?");

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ var __webpack_exports__ = (__webpack_exec__("./node_modules/adhocracy4/adhocracy4/polls/static/react_poll_management.jsx"));
/******/ }
]);