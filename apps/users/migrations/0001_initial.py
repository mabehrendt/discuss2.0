# Generated by Django 2.2.6 on 2019-10-24 12:20

import adhocracy4.images.fields
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0011_update_proxy_permissions"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 60 characters or fewer. Letters, digits, spaces and @/./+/-/_ only.",
                        max_length=60,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^[\\w]+[ \\w.@+-]*$",
                                "Enter a valid username. This value may contain only letters, digits, spaces and @/./+/-/_ characters. It must start with a digit or a letter.",
                                "invalid",
                            )
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        error_messages={
                            "unique": "A user with that email address already exists."
                        },
                        max_length=254,
                        unique=True,
                        verbose_name="Email address",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, editable=False
                    ),
                ),
                (
                    "get_notifications",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether you want to receive notifications. Unselect if you do not want to receive notifications.",
                        verbose_name="Send me email notifications",
                    ),
                ),
                (
                    "get_newsletters",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether you want to receive newsletters. Unselect if you do not want to receive newsletters.",
                        verbose_name="Send me newsletters",
                    ),
                ),
                (
                    "bio",
                    models.TextField(
                        blank=True,
                        help_text="Tell us about yourself in 255 characters!",
                        max_length=255,
                        verbose_name="Biography",
                    ),
                ),
                (
                    "twitter_handle",
                    models.CharField(
                        blank=True, max_length=15, verbose_name="Twitter handle"
                    ),
                ),
                (
                    "facebook_handle",
                    models.CharField(
                        blank=True,
                        help_text="Your facebook name is the last part of the URL, when you access your profile.",
                        max_length=50,
                        verbose_name="Facebook name",
                    ),
                ),
                (
                    "homepage",
                    models.URLField(blank=True, max_length=50, verbose_name="Homepage"),
                ),
                (
                    "_avatar",
                    adhocracy4.images.fields.ConfiguredImageField(
                        "avatar",
                        blank=True,
                        upload_to="users/images",
                        verbose_name="Avatar picture",
                    ),
                ),
                (
                    "language",
                    models.CharField(
                        choices=[("en", "English"), ("de", "German")],
                        default="de",
                        help_text="Specify your preferred language for the user interface and the notifications of the platform.",
                        max_length=4,
                        verbose_name="Your preferred language",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
